{"version":3,"sources":["fbase.js","router/Auth.js","component/admin/Header.js","component/admin/CreateUser.js","component/admin/RegiMatch.js","component/admin/UserList.js","component/admin/MatchList.js","router/AdminMain.js","component/client/Post.js","component/client/RankingContent.js","component/client/RecentGame.js","component/client/UserDetailChart.js","component/client/UserDetailGame.js","component/client/UserDetailPercentage.js","component/client/UserDetailRankingRate.js","component/client/UserDetail.js","component/client/UserInfo.js","router/ClientMain.js","component/Router.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","error","setError","history","useHistory","onSocialClick","event","a","target","name","provider","GoogleAuthProvider","signInWithPopup","onChange","value","onSubmit","preventDefault","signOut","signInWithEmailAndPassword","message","push","className","icon","faGoogle","color","size","style","marginBottom","type","placeholder","required","onClick","Header","class","CreateUser","studentid","department","start_rating","rating","status","inputs","setInputs","attachment","setAttachment","handleChange","e","userMakeSubmit","alert","attachmentUrl","attachmentRef","ref","child","putString","response","getDownloadURL","now","Date","year","getFullYear","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","time","userProfile","parseInt","game_all","game_win","game_lose","collection","doc","set","userMaker","Form","Input","id","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","src","alt","Button","RegiMatch","allUsers","increment","FieldValue","searchWinner","setSearchWinner","winnersRating","setWinnersRating","searchLoser","setSearchLoser","losersRating","setLosersRating","gameUser","setGameUser","winners","setWinners","losers","setLosers","startDate","setStartDate","allUserList","setAllUserList","useEffect","map","user","winnerChange","key","length","includes","concat","where","get","then","snapshot","forEach","data","Number","isInteger","loserChange","matchSubmit","winnerAverageRating","loserAverageRating","Math","max","min","percentage","pow","toFixed","reversePercentage","RatingChange","round","matchDate","winnerRatingAfter","winner","loserRatingAfter","loser","match","winnerRatingBefore","loserRatingBefore","ratingChange","write_time","NaN","update","shift","regiMatch","onKeyPress","i","selected","UserList","RecentUser","Toast","ToastHeader","MatchList","allGame","deleteClick","winTeam","loseTeam","changedRating","game","delete","RecentGame","AdminMain","Post","userObj","writeMode","setWriteMode","refresh","setRefresh","everyPost","setEveryPost","contentmake","setContent","commentmake","setComment","commentfix","setCommentFix","showImage","setShowImage","postimage","setPostImage","imageid","setImageId","orderBy","limit","docs","likelistname","likelistuserid","likenum","commentslists","likelist","like","userid","commentsnum","comment","commentObject","writerid","writername","text","writedate","recentfix","writerphoto","commentfixmode","unshift","postObject","content","writerprofile","recent_fix","imagelist","imageurl","commentslist","commentshow","moremenushow","rightNow","commentfixSubmit","object","console","log","post","neweverypost","page","submitComment","commentinfo","displayName","uid","photoUrl","unlikeClicked","likelistbyname","likelistbyuserid","namelist","filter","idlist","likeClicked","likeinfo","submitReview","sendData","promises","file","String","url","Promise","all","writeModeBtn","commentChange","commentfixChange","imgClicked","showcomment","postImageOne","postImageTwo","postImageThree","postImageFour","postImages","modal","Postfix","Postdelete","window","confirm","Commentdelete","Commentfix","PostList","Postmenushow","classNames","slice","username","postMaker","multiple","htmlFor","image","postMakeBtn","needLoginBtn","RankingContent","contentMode","allUsersList","studentRanking","end","loadState","setLoadState","showRanking","setShowRanking","currentType","setCurrentType","typeContent","setTypeContent","el","userRankingList","index","onClickAction","rankingContentFilter","faCaretDown","onScroll","rankingContainer","scrollTop","clientHeight","scrollHeight","prevLoadState","recentGames","faCaretUp","UserDetailChart","chartMode","period","userName","allUsersByTime","userKey","userMatch","getRating","STD_Date","wanted","find","indexOf","day","getNewDateForm","getToday","lastDays","dayOfDate","setDate","getDataLabels","dataLabels","getDatas","datas","labels","datasets","label","fill","borderColor","tension","options","maintainAspectRatio","UserDetailGame","noGames","UserDetailWinningRate","canvasRef","useRef","degToRad","degree","PI","winningRate","ctx","current","getContext","x","y","r","S_degree","E_degree","direction","beginPath","lineWidth","strokeStyle","arc","stroke","drawBase","drawGreenCircle","drawRedCircle","width","height","UserDetailRankingRate","rankingRate","sortedArr","sort","b","newRankingRate","UserDetail","setIsDetailOn","setChartMode","setPeriod","setUserMatch","info","periodHandler","dataset","chartModeHandler","mode","periodFilter","data-period","chartFilter","data-mode","querySnapshot","userMatchObj","faTimes","UserInfo","mapList","setMapList","isDetailOn","filterName","setFilterName","setUserKey","showDetail","num","userInfo","data-num","ClientMain","setContentMode","listOnClicked","AppRouter","setAllUsers","setAllGame","userObject","gameObject","exact","path","App","currentUser","init","setInit","setUserObj","onAuthStateChanged","photoURL","signInAnonymously","catch","code","refreshUser","updateProfile","args","isLoggedIn","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ac7d384.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_ODOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService,firebaseInstance } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onSocialClick = async(event) => {\r\n    const {target:{name},\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event;\r\n    if(name === \"email\"){\r\n      setEmail(value)\r\n    } else if (name === \"password\") {\r\n      setPassword(value)\r\n    }\r\n  };\r\n  const onSubmit = async(event) => {\r\n    event.preventDefault();\r\n    await authService.signOut();\r\n    try {\r\n      let data;\r\n        data = await authService.signInWithEmailAndPassword(email, password)\r\n  \r\n    } catch(error){\r\n      setError(error.message);\r\n    }\r\n    history.push(\"/\")\r\n  };\r\n\r\n  return(\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faGoogle}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <div> 구글 로그인만 가능 밑에 Continue with Google 클릭하셈</div>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n        name = \"email\" \r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        required \r\n        value={email}\r\n        onChange={onChange}\r\n        className=\"authInput\"/>\r\n\r\n        <input \r\n        name = \"password\" \r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        required \r\n        value={password}\r\n        onChange={onChange}\r\n        className=\"authInput\"/>\r\n\r\n        <input \r\n          className=\"authInput authSubmit\"\r\n          type=\"submit\" \r\n          value=\"Log In\">\r\n        </input>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { authService } from \"../../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\")\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"headerText\">KOTC 랭킹시스템 관리자 페이지</span>\r\n      <i class=\"fas fa-sign-out-alt fa-2x logout needMargin\"  onClick={onLogOutClick}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { React, useState } from 'react';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { dbService, storageService } from '../../fbase';\r\n\r\nconst CreateUser = () => {\r\n  const [inputs, setInputs] = useState({\r\n    name: '',\r\n    studentid:'',\r\n    department:'',\r\n    start_rating:'',\r\n    rating:'',\r\n    status:'재학'\r\n  });\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n\r\n  const { name, studentid, department, start_rating, status} = inputs;\r\n\r\n  const handleChange = (e) => {\r\n    const {value, name} = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const userMakeSubmit = async(e) => {\r\n    e.preventDefault();\r\n    if(name === ''){\r\n      alert(\"이름을 입력하세요\")\r\n      return;\r\n    }\r\n    if(studentid === ''){\r\n      alert(\"학번을 입력하세요\")\r\n      return;\r\n    }\r\n    if(department === ''){\r\n      alert(\"학과를 입력하세요\")\r\n      return;\r\n    }\r\n    if(start_rating === ''){\r\n      alert(\"초기 레이팅을 입력하세요\")\r\n      return;\r\n    }\r\n    if(status === ''){\r\n      alert(\"재학상태를 입력하세요\")\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\"){\r\n      const attachmentRef = storageService.ref().child('userprofile').child(name);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    \r\n    let now = new Date();   \r\n    let year = now.getFullYear(); // 년도\r\n    let month = now.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    let date = now.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    let hours = now.getHours(); // 시\r\n    if(hours<10){\r\n      hours = 0+''+hours\r\n    }\r\n    let minutes = now.getMinutes();  // 분\r\n    if(minutes<10){\r\n      minutes = 0+''+minutes\r\n    }\r\n    let seconds = now.getSeconds();  // 초\r\n    if(seconds<10){\r\n      seconds = 0+''+seconds\r\n    }\r\n    const time = (year + '' + month + '' + date + '' + hours + '' + minutes + '' + seconds)\r\n\r\n    const userProfile = {\r\n      name: name,\r\n      studentid: parseInt(studentid),\r\n      department: department,\r\n      start_rating: parseInt(start_rating),\r\n      rating: parseInt(start_rating),\r\n      status: status,\r\n      time:time,\r\n      attachmentUrl,\r\n      game_all:0,\r\n      game_win:0,\r\n      game_lose:0,\r\n    }\r\n    await dbService.collection(\"user\").doc(name).set(userProfile);\r\n\r\n    setAttachment(\"\");\r\n    setInputs({\r\n      name: '',\r\n      studentid:'',\r\n      department:'',\r\n      start_rating:'',\r\n      rating:'',\r\n      status:'재학'\r\n    })\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  const onFileChange = (event) => {\r\n    const {target:{files},\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: {result},\r\n      } = finishedEvent;\r\n      setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  //위에는 함수 밑에는 jsx\r\n  \r\n  const userMaker = (\r\n    <div className='userMaker'>\r\n      <Form className=\"noteWriter\">\r\n        <div className=\"userProfileImage\">\r\n          <span>프사</span>\r\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" onChange={onFileChange}/>\r\n        </div>\r\n        {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img className=\"profileImg\" src={attachment} alt=\"profile image\"/>\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n        <div className=\"needMargin\">\r\n          <span>이름</span>\r\n          <Input type=\"text\" name='name' onChange={handleChange} value={name}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>학번</span>\r\n          <Input type=\"text\" name='studentid' onChange={handleChange} value={studentid}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>학과</span>\r\n          <Input type=\"text\" name='department' onChange={handleChange} value={department}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>초기레이팅</span>\r\n          <Input type=\"text\" name='start_rating' onChange={handleChange} value={start_rating}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>상태</span>\r\n          <Input type=\"select\" name='status' onChange={handleChange} value={status}>\r\n            <option>재학</option>\r\n            <option>졸업</option>\r\n          </Input>\r\n        </div>\r\n        <Button className=\"needMargin\" onClick={userMakeSubmit}>전송</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"ShortBox\">\r\n      {userMaker}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.min.css'\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { dbService } from '../../fbase';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst RegiMatch = ({allUsers}) => {\r\n  const increment = firebase.firestore.FieldValue.increment(1);\r\n  const [searchWinner,setSearchWinner] = useState(\"\");\r\n  const [winnersRating, setWinnersRating] = useState([]);\r\n  const [searchLoser,setSearchLoser] = useState(\"\");\r\n  const [losersRating, setLosersRating] = useState([]);\r\n  const [gameUser, setGameUser] = useState(\"\");\r\n  const [winners, setWinners] = useState([]);\r\n  const [losers, setLosers] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [allUserList, setAllUserList] = useState([])\r\n\r\n  useEffect(() => {\r\n    allUsers.map(user => {\r\n      setAllUserList(allUserList => [...allUserList, user.name])\r\n    })\r\n  }, [allUsers])\r\n\r\n  const stateInit = () => {\r\n    setSearchWinner('');\r\n    setSearchLoser('');\r\n    setWinners([]);\r\n    setLosers([]);\r\n    setGameUser([]);\r\n    setWinnersRating([]);\r\n    setLosersRating([]);\r\n  }\r\n\r\n  const winnerChange = e => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      if(winners.length>=2){\r\n        alert('2명이하만')\r\n        setSearchWinner('');\r\n        return;\r\n      } else {  //2명 이하이고\r\n        if(allUserList.includes(searchWinner)){  //유저목록에 있으면\r\n          if(gameUser.includes(searchWinner)){  //이면서 들어가있으면 안됨\r\n            alert(\"이미 등록된 유저입니다\")\r\n            setSearchWinner('');\r\n            return;\r\n          } else {\r\n            setWinners(winners.concat(searchWinner))\r\n            setGameUser(gameUser.concat(searchWinner))\r\n            dbService.collection(\"user\").where(\"name\",\"==\",searchWinner).get().then((snapshot) => {\r\n              snapshot.forEach((doc) => {\r\n                setWinnersRating(winnersRating.concat(doc.data().rating));\r\n              })\r\n            })\r\n            setSearchWinner('');  \r\n          }  \r\n            \r\n        } else if(Number.isInteger(parseInt(searchWinner))){\r\n          setWinners(winners.concat(searchWinner))\r\n          setSearchWinner('');\r\n          setWinnersRating(winnersRating.concat(Number(searchWinner)));  \r\n\r\n        } else { //등록된 유저가 아니면\r\n          alert('등록된 유저가 아닙니다')\r\n          setSearchWinner('');\r\n        }\r\n      }\r\n    } else { \r\n      setSearchWinner(e.target.value);\r\n    }\r\n  };\r\n\r\n  const loserChange = e => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      if(losers.length>=2){\r\n        alert('2명이하만')\r\n        setSearchLoser('');\r\n        return;\r\n      } else {  //2명 이하이고\r\n        if(allUserList.includes(searchLoser)){  //유저목록에 있으면\r\n          if(gameUser.includes(searchLoser)){\r\n            alert(\"이미 등록된 유저입니다\")\r\n            setSearchLoser('');\r\n            return;\r\n          } else {\r\n            setGameUser(gameUser.concat(searchLoser))\r\n            setLosers(losers.concat(searchLoser))\r\n            dbService.collection(\"user\").where(\"name\",\"==\",searchLoser).get().then((snapshot) => {\r\n              snapshot.forEach((doc) => {\r\n                setLosersRating(losersRating.concat(doc.data().rating));\r\n              })\r\n            })\r\n            setSearchLoser('');\r\n          }\r\n\r\n        } else if(Number.isInteger(parseInt(searchLoser))){\r\n          setLosers(losers.concat(searchLoser))\r\n          setSearchLoser('');\r\n          setLosersRating(losersRating.concat(Number(searchLoser)));\r\n        } else { //등록된 유저가 아니면\r\n          alert('등록된 유저가 아닙니다')\r\n          setSearchLoser('');\r\n        }\r\n      }\r\n    } else { \r\n      setSearchLoser(e.target.value);\r\n    }\r\n  };\r\n\r\n  const matchSubmit = async(e) => {\r\n    e.preventDefault();\r\n    let winnerAverageRating = winnersRating[0];\r\n    let loserAverageRating = losersRating[0];\r\n    if(winnersRating.length==2){\r\n      winnerAverageRating = (Math.max(winnersRating[0],winnersRating[1])+2*Math.min(winnersRating[0],winnersRating[1]))/3\r\n    }\r\n    if(losersRating.length==2){\r\n      loserAverageRating = (Math.max(losersRating[0],losersRating[1])+2*Math.min(losersRating[0],losersRating[1]))/3\r\n    }\r\n    const percentage = (1/(1+(Math.pow(10,(loserAverageRating-winnerAverageRating)/400)))).toFixed(2)\r\n    const reversePercentage = (1-percentage).toFixed(2)\r\n    let RatingChange=0\r\n    if(winnersRating.length==2){\r\n      RatingChange = Math.round(reversePercentage*16)\r\n    } else {\r\n      RatingChange = Math.round(reversePercentage*32)\r\n    }\r\n    if(winners.length===0){\r\n      alert('승자를 입력하세요');\r\n      return;\r\n    }\r\n    if(losers.length===0){\r\n      alert('패자를 입력하세요');\r\n      return;\r\n    }\r\n    if(winners.length !== losers.length){\r\n      alert(\"인원을 맞추시오\");\r\n      return;\r\n    }\r\n\r\n    let now = new Date();   \r\n    let year = now.getFullYear(); // 년도\r\n    let month = now.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    let date = now.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    let hours = now.getHours(); // 시\r\n    if(hours<10){\r\n      hours = 0+''+hours\r\n    }\r\n    let minutes = now.getMinutes();  // 분\r\n    if(minutes<10){\r\n      minutes = 0+''+minutes\r\n    }\r\n    let seconds = now.getSeconds();  // 초\r\n    if(seconds<10){\r\n      seconds = 0+''+seconds\r\n    }\r\n    const time = (year + '' + month + '' + date + '' + hours + '' + minutes + '' + seconds)\r\n\r\n    year = startDate.getFullYear(); // 년도\r\n    month = startDate.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    date = startDate.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    const matchDate = (year + '' + month + '' + date)\r\n\r\n    let winnerRatingAfter = winnersRating.map(winner => winner + RatingChange)\r\n    let loserRatingAfter = losersRating.map(loser => loser - RatingChange)\r\n\r\n    const match = {\r\n      winners: winners,\r\n      winnerRatingBefore: winnersRating,\r\n      winnerRatingAfter: winnerRatingAfter,\r\n      losers: losers,\r\n      loserRatingBefore: losersRating,\r\n      loserRatingAfter: loserRatingAfter,\r\n      percentage: Math.round(percentage*100),\r\n      ratingChange: RatingChange,\r\n      date: matchDate,\r\n      write_time: time\r\n    }\r\n\r\n    if(percentage==NaN){\r\n      alert(\"percentage is never NaN\");\r\n      return;\r\n    }\r\n\r\n    await dbService.collection(\"game\").doc(matchDate+'-'+time).set(match);\r\n    \r\n    await winners.map(winner => {\r\n      dbService.collection(\"user\").doc(winner).collection(\"game_record\").doc(matchDate+'-'+time).set(match)\r\n      dbService.collection(\"user\").doc(winner).update({\r\n        rating: winnersRating.shift() + RatingChange,\r\n        game_all: increment,\r\n        game_win: increment\r\n      })\r\n    })\r\n    await losers.map(loser => {\r\n      dbService.collection(\"user\").doc(loser).collection(\"game_record\").doc(matchDate+'-'+time).set(match)\r\n      dbService.collection(\"user\").doc(loser).update({\r\n        rating: losersRating.shift() - RatingChange,\r\n        game_all: increment,\r\n        game_lose: increment\r\n      })\r\n    })\r\n    stateInit();\r\n  }\r\n\r\n\r\n  const regiMatch = (\r\n    <div className='userMaker'>\r\n      <Form className=\"noteWriter\">\r\n        <div className=\"matchResult\">\r\n          <span>\r\n            <div>승</div>\r\n            <Input type=\"text\" name='win' value={searchWinner} onChange={winnerChange} onKeyPress={winnerChange}/>\r\n            <div className=\"users playerView\">\r\n              {winners.map(i => (\r\n                <span className=\"targetUser\">{i}</span>\r\n              ))}\r\n            </div>\r\n          </span>\r\n          <span className=\"versus\"> VS </span>\r\n          <span>\r\n            <div>패</div>\r\n            <Input type=\"text\" name='lose' value={searchLoser} onChange={loserChange} onKeyPress={loserChange}/>\r\n            <div className=\"users\">\r\n              <div className=\"flexWrap\">\r\n                {losers.map(i => (\r\n                  <span className=\"targetUser\">{i}</span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div className=\"datepicker\">\r\n          <span className=\"needMargin\">시합일</span>\r\n          <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n        </div>\r\n        <Button className=\"needMargin\" onClick={matchSubmit}>전송</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"ShortBox\">\r\n      {regiMatch}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegiMatch;\r\n","import { React } from 'react';\r\nimport { Toast, ToastHeader } from 'reactstrap';\r\n\r\nconst UserList = ({allUsers}) => {\r\n\r\n  const RecentUser = allUsers.map(user => (\r\n    <Toast>\r\n      <ToastHeader>\r\n        <div className=\"spaceBetween\">\r\n          <div>{user.name}__</div>\r\n          <div>{user.status}</div>\r\n        </div>\r\n      </ToastHeader>\r\n      <div className=\"needMargin spaceBetween\">\r\n        <div>학번 : {user.studentid}</div>\r\n        <div>학과 : {user.department}</div>\r\n      </div>\r\n      <div className=\"needMargin spaceBetween\">\r\n        <div>Rating : {user.rating}</div>\r\n        <div>전적 : {user.game_win}승 {user.game_lose}패</div>\r\n      </div>\r\n    </Toast>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"LongBox\">\r\n      {RecentUser}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { React, useEffect, useState } from 'react';\r\nimport { Toast, ToastHeader } from 'reactstrap';\r\nimport { dbService } from '../../fbase';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst MatchList = ({allGame}) => {\r\n\r\n  const deleteClick = async(e) => {\r\n    let winTeam = []\r\n    let loseTeam = []\r\n    let changedRating = 0\r\n    allGame.map(game => {\r\n      if(game.id == e.target.id){\r\n        winTeam=winTeam.concat(game.winners)\r\n        loseTeam=loseTeam.concat(game.losers)\r\n        changedRating =game.ratingChange\r\n      }\r\n    })\r\n\r\n    await winTeam.map(winner => {\r\n      dbService.collection(\"user\").doc(winner).collection(\"game_record\").doc(e.target.id).delete()\r\n      dbService.collection(\"user\").doc(winner).update({\r\n        rating:firebase.firestore.FieldValue.increment(-changedRating),\r\n        game_all:firebase.firestore.FieldValue.increment(-1),\r\n        game_win:firebase.firestore.FieldValue.increment(-1)\r\n      })\r\n    })\r\n\r\n    await loseTeam.map(loser => {\r\n      dbService.collection(\"user\").doc(loser).collection(\"game_record\").doc(e.target.id).delete()\r\n      dbService.collection(\"user\").doc(loser).update({\r\n        rating:firebase.firestore.FieldValue.increment(changedRating),\r\n        game_all:firebase.firestore.FieldValue.increment(-1),\r\n        game_lose:firebase.firestore.FieldValue.increment(-1)\r\n      })\r\n    })\r\n    await dbService.collection(\"game\").doc(e.target.id).delete()\r\n    alert(e.target.id+' 를 삭제했습니다')\r\n  }\r\n\r\n  const RecentGame = allGame.map(game => (\r\n    <div className=\"displayFlex\">\r\n      <Toast>\r\n        <ToastHeader>\r\n          {game.winners.map(i => (\r\n          <span className=\"targetUser\">{i}</span>\r\n          ))}\r\n          vs \r\n          {game.losers.map(i => (\r\n          <span className=\"targetUser\">{i}</span>\r\n          ))}\r\n        </ToastHeader>\r\n        <div className=\"needMargin flexWrap spaceBetween\">\r\n          <div>레이팅변화 : {game.ratingChange}</div>\r\n          <div>승률예측 : {game.percentage}%</div>\r\n        </div>\r\n        <div className=\"needMargin flexWrap spaceBetween\">\r\n          등록시각 : {game.time}\r\n        </div>\r\n      </Toast>\r\n      <i class=\"far fa-trash-alt deleteIcon\" id={game.date+'-'+game.time} onClick={deleteClick}></i>\r\n    </div>\r\n  ))\r\n \r\n  return (\r\n    <div className=\"LongBox\">\r\n      <div className=\"gameListHeader\">\r\n        <span>승리팀</span>\r\n        <span>패배팀</span>\r\n      </div>\r\n      <div>{RecentGame}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchList;\r\n","import { React, useEffect, useState } from 'react';\r\nimport { dbService } from '../fbase';\r\nimport Header from '../component/admin/Header';\r\nimport CreateUser from '../component/admin/CreateUser'\r\nimport RegiMatch from '../component/admin/RegiMatch'\r\nimport UserList from '../component/admin/UserList'\r\nimport MatchList from '../component/admin/MatchList'\r\nimport '../css/admin.css';\r\n\r\nconst AdminMain = ({allUsers, allGame}) => {\r\n  \r\n  return (\r\n    <div className=\"AdminMain\">\r\n      <Header />\r\n      <div className=\"Content\">\r\n        <CreateUser/>\r\n        <RegiMatch allUsers={allUsers}/>\r\n        <UserList allUsers={allUsers}/>\r\n        <MatchList allGame={allGame}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminMain;\r\n","import React, { useEffect, useState,useRef } from 'react';\r\nimport { dbService,authService,firebaseInstance,storageService } from '../../fbase'\r\nimport firebase from 'firebase/app';\r\n\r\nconst Post = ({userObj}) => {\r\n  const [writeMode, setWriteMode] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [everyPost, setEveryPost] = useState([]);\r\n  const [contentmake, setContent] = useState('');\r\n  const [commentmake, setComment] = useState('');\r\n  const [commentfix, setCommentFix] = useState('');\r\n  const [attachment, setAttachment] = useState([]);\r\n  const [showImage, setShowImage] = useState(false);\r\n  const [postimage, setPostImage] = useState([]);\r\n  const [imageid, setImageId] = useState(0);\r\n  const increment = firebase.firestore.FieldValue.increment(1);\r\n\r\n  useEffect(() => {\r\n    setEveryPost([])\r\n    dbService.collection(\"post\").orderBy(\"date\",\"desc\").limit(10).get().then(snapshot => {\r\n      snapshot.docs.map(async(doc) => {\r\n        let likelistname = [];\r\n        let likelistuserid = [];\r\n        let likenum = 0;\r\n        let commentslists = [];\r\n        await dbService.collection(\"post\").doc(doc.data().date).collection(\"likes\").get().then(likelist => {\r\n          likelist.docs.map(like => {\r\n            likenum += 1;\r\n            likelistname.push(like.data().name);\r\n            likelistuserid.push(like.data().userid);\r\n          })\r\n        })\r\n        let commentsnum = 0;\r\n        await dbService.collection(\"post\").doc(doc.data().date).collection(\"comments\").get().then(comment => {\r\n          comment.docs.map(comment => {\r\n            commentsnum += 1;\r\n            const commentObject = {\r\n              writerid: comment.data().writerid,\r\n              writername: comment.data().writername,\r\n              text: comment.data().text,\r\n              writedate: comment.data().writedate,\r\n              recentfix: comment.data().recentfix,\r\n              writerphoto: comment.data().writerphoto,\r\n              commentfixmode: false,\r\n            }\r\n            commentslists.unshift(commentObject);\r\n          })\r\n        })\r\n        const postObject = {\r\n          content: doc.data().content,\r\n          writername: doc.data().writername,\r\n          writerid: doc.data().writerid,\r\n          writerprofile: doc.data().writerprofile,\r\n          date: doc.data().date,\r\n          recent_fix: doc.data().recent_fix,\r\n          imagelist: doc.data().imageurl,\r\n          likenum: likenum,\r\n          likelistname: likelistname,\r\n          likelistuserid: likelistuserid,\r\n          commentsnum: commentsnum,\r\n          commentslist: commentslists,\r\n          commentshow: false,\r\n          moremenushow: false,\r\n        }\r\n        setEveryPost(everyPost => [...everyPost, postObject]);\r\n      })\r\n    })\r\n  }, [refresh])\r\n\r\n  const onSocialClick = async(event) => {\r\n    const {target:{name},\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  function rightNow() {\r\n    let now = new Date();   \r\n    let year = now.getFullYear(); // 년도\r\n    let month = now.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    let date = now.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    let hours = now.getHours(); // 시\r\n    if(hours<10){\r\n      hours = 0+''+hours\r\n    }\r\n    let minutes = now.getMinutes();  // 분\r\n    if(minutes<10){\r\n      minutes = 0+''+minutes\r\n    }\r\n    let seconds = now.getSeconds();  // 초\r\n    if(seconds<10){\r\n      seconds = 0+''+seconds\r\n    }\r\n    const time = (year + '' + month + '' + date + '' + hours + '' + minutes + '' + seconds)\r\n    return time\r\n  }\r\n\r\n  const commentfixSubmit = async(e,object) => {\r\n    e.preventDefault();\r\n    if(commentfix === ''){\r\n      alert(\"내용을 입력하세요\");\r\n      return;\r\n    }\r\n    if(commentfix === object.comment.text){\r\n      return;\r\n    }\r\n    const time = rightNow();\r\n    console.log(object.post.date)\r\n    console.log(object.comment.writedate)\r\n    await dbService.collection(\"post\").doc(object.post.date).collection(\"comments\").doc(object.comment.writedate).update({text: commentfix, recentfix: time})\r\n    const neweverypost = everyPost.map(page => {\r\n      if(page.date == object.post.date){\r\n        page.commentslist.map(comment => {\r\n          if(comment.writedate == object.comment.writedate){\r\n            comment.commentfixmode = !comment.commentfixmode\r\n            comment.text = commentfix\r\n          }\r\n          return comment\r\n        })\r\n      }\r\n      return page\r\n    })\r\n    setEveryPost(neweverypost);\r\n    setCommentFix('');\r\n  }\r\n\r\n  const submitComment = async(e,post) => {\r\n    e.preventDefault();\r\n    if(commentmake === ''){\r\n      alert(\"내용을 입력하세요\");\r\n      return;\r\n    }\r\n    const time = rightNow();\r\n    const commentinfo = {\r\n      text: commentmake,\r\n      writedate: time,\r\n      recentfix: time,\r\n      writername: userObj.displayName,\r\n      writerid: userObj.uid,\r\n      writerphoto: userObj.photoUrl,\r\n    }\r\n    await dbService.collection(\"post\").doc(post.post.date).collection(\"comments\").doc(time).set(commentinfo) //동시에 댓글을 달면 데이터가 겹쳐짐\r\n    setComment('');\r\n\r\n    const neweverypost = everyPost.map(page => {\r\n      if(page.date == post.post.date){\r\n        const commentslists = page.commentslist;\r\n        commentslists.unshift(commentinfo);\r\n        page.commentslist = commentslists;\r\n      }\r\n      return page\r\n    })\r\n    setEveryPost(neweverypost); \r\n  };\r\n\r\n  const unlikeClicked = async(e,post) => {\r\n    e.preventDefault();\r\n    await dbService.collection(\"post\").doc(post.post.date).collection(\"likes\").doc(userObj.uid).delete()\r\n\r\n    const neweverypost = everyPost.map(page => {\r\n      if(page.date == post.post.date){\r\n        const likelistbyname = page.likelistname;\r\n        const likelistbyuserid = page.likelistuserid;\r\n        const namelist = likelistbyname.filter((name) => name !== userObj.displayName);\r\n        const idlist = likelistbyuserid.filter((uid) => uid !== userObj.uid);\r\n        page.likenum = page.likenum -1;\r\n        page.likelistname = namelist;\r\n        page.likelistuserid = idlist;\r\n      }\r\n      return page\r\n    })\r\n    setEveryPost(neweverypost);  \r\n    }\r\n\r\n  const likeClicked = async(e,post) => {\r\n    e.preventDefault();\r\n    const likeinfo = {\r\n      name: userObj.displayName,\r\n      userid: userObj.uid,\r\n      time: rightNow(),\r\n    }\r\n    await dbService.collection(\"post\").doc(post.post.date).collection(\"likes\").doc(userObj.uid).set(likeinfo)\r\n\r\n    const neweverypost = everyPost.map(page => {\r\n      if(page.date == post.post.date){\r\n        const likelistbyname = page.likelistname;\r\n        const likelistbyuserid = page.likelistuserid;\r\n        likelistbyname.push(userObj.displayName);\r\n        likelistbyuserid.push(userObj.uid);\r\n        page.likenum = page.likenum + 1;\r\n        page.likelistname = likelistbyname;\r\n        page.likelistuserid = likelistbyuserid;\r\n      }\r\n      return page\r\n    })\r\n    setEveryPost(neweverypost);    \r\n  }\r\n\r\n  const submitReview = async(e) =>{\r\n    e.preventDefault();\r\n    if(contentmake === ''){\r\n      alert(\"내용을 입력하세요\")\r\n      return;\r\n    }\r\n    const time = rightNow();\r\n    let attachmentUrl = [];\r\n\r\n    async function sendData(){\r\n      let i = 0;\r\n      const promises = attachment.map(async(file) => {\r\n        i = i+1;\r\n        let attachmentRef = await storageService.ref().child('post/').child(time).child(String(i));\r\n        let response = await attachmentRef.putString(file, \"data_url\");\r\n        let url = await response.ref.getDownloadURL();\r\n        return url\r\n      })\r\n      const results =  await Promise.all(promises)\r\n      results.forEach(data => attachmentUrl.push(data) )\r\n    }\r\n    await sendData();\r\n    \r\n    const postObject = {\r\n      date: time,\r\n      recent_fix: time,\r\n      content: contentmake,\r\n      writername: userObj.displayName,\r\n      writerid: userObj.uid,\r\n      writerprofile: userObj.photoUrl,\r\n      imageurl: attachmentUrl,\r\n    }\r\n\r\n    await dbService.collection(\"post\").doc(time).set(postObject);\r\n    setContent('')\r\n    setWriteMode(!writeMode)\r\n    setRefresh(!refresh)\r\n    setAttachment([])\r\n  };\r\n\r\n  const writeModeBtn = () => {\r\n    setWriteMode(!writeMode)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  const commentChange = (e) => {\r\n    e.preventDefault();\r\n    setComment(e.target.value)\r\n  }\r\n\r\n  const commentfixChange = (e) => {\r\n    e.preventDefault();\r\n    setCommentFix(e.target.value)\r\n  }\r\n\r\n  const onFileChange = (event) => {\r\n    const {target:{files},\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: {result},\r\n      } = finishedEvent;\r\n      setAttachment(attachment.concat(result))\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const moveleft = () => {\r\n    setImageId(imageid-1)\r\n  }\r\n\r\n  const moveright = () => {\r\n    setImageId(imageid+1)\r\n  }\r\n\r\n  const imgClicked = (e,post) => {\r\n    setPostImage(post.post)\r\n    setImageId(parseInt(e.target.id))\r\n    setShowImage(true);\r\n  }\r\n\r\n  const closeClick = () => {\r\n    setPostImage([])\r\n    setImageId('')\r\n    setShowImage(false);\r\n  }\r\n\r\n  const showcomment = (e,post) => {\r\n    e.preventDefault();\r\n    const neweverypost = everyPost.map(page => {\r\n      if(page.date == post.post.date){\r\n        page.commentshow = !page.commentshow;\r\n      }\r\n      return page\r\n    })\r\n    setEveryPost(neweverypost);   \r\n  }\r\n\r\n  const postImageOne = (post) => (\r\n      <img id=\"0\" onClick={(e) => {imgClicked(e,{post})}} src={post[0]} className=\"imageOne\"/>\r\n  )\r\n\r\n  const postImageTwo = (post) => (\r\n    <div className=\"postImages\">\r\n      <div onClick={(e) => {imgClicked(e,{post})}}>\r\n        <img id=\"0\" onClick={(e) => {imgClicked(e,{post})}} src={post[0]} className=\"imageTwo\"/>\r\n      </div>\r\n      <div onClick={(e) => {imgClicked(e,{post})}}>\r\n        <img id=\"1\" onClick={(e) => {imgClicked(e,{post})}} src={post[1]} className=\"imageTwo\"/>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const postImageThree = (post) => (\r\n    <>\r\n      <div onClick={(e) => {imgClicked(e,{post})}}><img id=\"0\" src={post[0]} className=\"imageThreeBig\"/></div>\r\n      <div onClick={(e) => {imgClicked(e,{post})}}>\r\n        <img id=\"1\" src={post[1]} className=\"imageThreeSmall\"/>\r\n        <img id=\"2\" src={post[2]} className=\"imageThreeSmall\"/>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  const postImageFour = (post) => (\r\n    <div className=\"postImages\">\r\n      <div onClick={(e) => {imgClicked(e,{post})}} className=\"imageFour\">\r\n        <img id=\"0\" onClick={(e) => {imgClicked(e,{post})}} src={post[0]} className=\"fullimage\"/>\r\n      </div>\r\n      <div onClick={(e) => {imgClicked(e,{post})}} className=\"imageFour\">\r\n        <img id=\"1\" onClick={(e) => {imgClicked(e,{post})}} src={post[1]} className=\"fullimage\"/>\r\n      </div>\r\n      <div onClick={(e) => {imgClicked(e,{post})}} className=\"imageFour\">\r\n        <img id=\"2\" onClick={(e) => {imgClicked(e,{post})}} src={post[2]} className=\"fullimage\"/>\r\n      </div>\r\n      <div onClick={(e) => {imgClicked(e,{post})}} className=\"imageFour\">\r\n        <img id=\"3\" onClick={(e) => {imgClicked(e,{post})}} src={post[3]} className=\"fullimage\"/>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const postImages = (post) => (\r\n    <div className=\"postImages\">\r\n      <div className=\"imageFour\" post={post} onClick={(e) => {imgClicked(e,{post})}}><img id=\"0\" src={post[0]} className=\"fullimage\"/></div>\r\n      <div className=\"imageFour\" post={post} onClick={(e) => {imgClicked(e,{post})}}><img id=\"1\" src={post[1]} className=\"fullimage\"/></div>\r\n      <div className=\"imageFour\" post={post} onClick={(e) => {imgClicked(e,{post})}}><img id=\"2\" src={post[2]} className=\"fullimage\"/></div>\r\n      <div className=\"imageFour\" post={post} onClick={(e) => {imgClicked(e,{post})}}>\r\n        <div className=\"moreimages\" id=\"3\"/>\r\n        <div className=\"showmoreimages\" id=\"3\">더보기+</div>\r\n        <img id=\"3\" src={post[3]} className=\"fullimage\"/>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const modal = (\r\n    <div className='modal'>\r\n      <span className=\"close\" onClick={closeClick}>&times;</span>\r\n      {imageid != 0 && <span className=\"left\" onClick={moveleft}>&lt;</span>}\r\n      {postimage.length-1 !== imageid && <span className=\"right\" onClick={moveright}>&gt;</span>}\r\n      <img className=\"modal-content\" src={postimage[imageid]}/>\r\n    </div>\r\n  )\r\n\r\n  const Postfix = async(e, post) => {\r\n    console.log(post.post)\r\n    //수정은 어려워서 나중에 할래\r\n  }\r\n\r\n  const Postdelete = async(e,post) => {\r\n    if(window.confirm(\"ㄹㅇ 지움?\")) {\r\n      await dbService.collection(\"post\").doc(post.post.date).delete()\r\n      setRefresh(!refresh)\r\n    }\r\n  }\r\n\r\n  const Postmenushow = (e, post) => {\r\n    const neweverypost = everyPost.map(page => {\r\n      if(page.date == post.post.date){\r\n        page.moremenushow = !page.moremenushow\r\n      }\r\n      return page\r\n    })\r\n    setEveryPost(neweverypost);   \r\n  }\r\n\r\n  const Commentdelete = async(e,object) => {\r\n    if(window.confirm(\"ㄹㅇ 지움?\")) {\r\n      await dbService.collection(\"post\").doc(object.post.date).collection(\"comments\").doc(object.comment.writedate).delete()\r\n      setRefresh(!refresh)\r\n    }\r\n  }\r\n\r\n  const Commentfix = async(e,object) => {\r\n    const neweverypost = everyPost.map(page => {\r\n      if(page.date == object.post.date){\r\n        page.commentslist.map(comment => {\r\n          if(comment.writedate == object.comment.writedate){\r\n            comment.commentfixmode = !comment.commentfixmode\r\n          }\r\n          return comment\r\n        })\r\n      }\r\n      return page\r\n    })\r\n    setEveryPost(neweverypost);\r\n    setCommentFix(object.comment.text)\r\n  }\r\n\r\n  const PostList = everyPost.map(post =>(\r\n    <div className=\"post\">\r\n      {post.writerid == userObj.uid && (\r\n        <div className=\"moremenu\" onClick={(e) => {Postmenushow(e,{post})}}>\r\n          <i className=\"moremenuicon fas fa-ellipsis-h\"/>\r\n          <div className={post.moremenushow ? \"moremenuactive\" : \"moremenuicons\"}>\r\n            <div className=\"postfix\" onClick={(e) => {Postfix(e,{post})}}>수정</div>\r\n            <div className=\"postdelete\" onClick={(e) => {Postdelete(e,{post})}}>삭제</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"postHeader\">\r\n        <div className=\"postHeaderLeft\">\r\n          <img className=\"userProfile\" src={post.writerprofile}></img>\r\n        </div>\r\n        <div className=\"postHeaderRight\">\r\n          <div classNames=\"userName\">{post.writername}</div>\r\n          <div classNames=\"postDate\">{post.date.slice(0,4)}년 {post.date.slice(4, 6)}월 {post.date.slice(6,8)}일</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"postContent\">\r\n        <div className=\"postText\">{post.content}</div>\r\n        <div className=\"postImage\">\r\n          {post.imagelist.length == 1 && postImageOne(post.imagelist)}\r\n          {post.imagelist.length == 2 && postImageTwo(post.imagelist)}\r\n          {post.imagelist.length == 3 && postImageThree(post.imagelist)}\r\n          {post.imagelist.length == 4 && postImageFour(post.imagelist)}\r\n          {post.imagelist.length > 4 && postImages(post.imagelist)}\r\n        </div>\r\n      </div>\r\n      <div className=\"heartandcomment\">\r\n        <div className=\"getheart\">\r\n          <i className=\"hearticon fas fa-heart\"></i>\r\n          {post.likenum}\r\n          <div className=\"likelistshow\">{post.likelistname.map(username => <div classNames=\"likeuser\">{username}</div>)}</div>\r\n        </div>\r\n        <div onClick={(e) => {showcomment(e,{post})}} className=\"getcomment\">\r\n          <i class=\"commenticon fas fa-comment\"></i>\r\n          {post.commentsnum}\r\n        </div>\r\n      </div>     \r\n      <div className=\"postFooter\">\r\n        {post.likelistuserid.includes(userObj.uid)\r\n          ? <div className=\"postLike\"><i className=\"heart fas fa-heart\" onClick={(e) => {unlikeClicked(e,{post})}}></i>좋아요</div>\r\n          : <div className=\"postLike\"><i className=\"heart far fa-heart\" onClick={(e) => {likeClicked(e,{post})}}></i>좋아요</div>\r\n        }\r\n        <div onClick={(e) => {showcomment(e,{post})}} className=\"postComment\"><i class=\"commenticon fas fa-comment-dots\"></i>댓글 쓰기</div>\r\n      </div>\r\n      {post.commentshow && (  //댓글작성, 보기\r\n        <div className=\"commentsBox\">\r\n          <div className=\"commentmaker\">\r\n            <img class=\"commentUserProfile\" src={userObj.photoUrl}></img>\r\n            <input className=\"commentwrite\" onChange={commentChange} value={commentmake} placeholder=\"댓글을 입력해보세용\"></input>\r\n            {commentmake ? <button className=\"commentsubmitbtn\" onClick={(e) => {submitComment(e,{post})}}><p>보내기</p></button> : <div className=\"btnunactive\"><p>보내기</p></div>}\r\n          </div>\r\n          {post.commentslist.map(comment => (\r\n              <div className=\"comments\">\r\n                {comment.writerid == userObj.uid && (\r\n                  <div className=\"commentmoremenu\">\r\n                    <i className=\"moremenuicon fas fa-ellipsis-h\"/>\r\n                    <div className=\"commentmoremenuactive\">\r\n                      <div className=\"commentfix\" onClick={(e) => {Commentfix(e,{post,comment})}}>수정</div>\r\n                      <div className=\"commentdelete\" onClick={(e) => {Commentdelete(e,{post,comment})}}>삭제</div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div className=\"commentuserprofile\"><img className=\"commentUserProfile\" src={comment.writerphoto} alt=\"프사\"></img></div>\r\n                <div className=\"commentmain\">\r\n                  <div className=\"commentwriter\">{comment.writername}</div>\r\n                  {comment.commentfixmode\r\n                    ? <div className=\"commentfixmain\">\r\n                        <input className=\"commentwrite\" onChange={commentfixChange} value={commentfix}></input>\r\n                        <button className=\"commentsubmitbtn\" onClick={(e) => {commentfixSubmit(e,{post,comment})}}><p>수정</p></button>\r\n                      </div>\r\n                    : <div>{comment.text}</div>\r\n                  }\r\n                  <div className=\"commentwritedate\">{comment.writedate.slice(0, 4)}년 {comment.writedate.slice(4, 6)}월 {comment.writedate.slice(6,8)}일</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  ))\r\n\r\n  const postMaker = (\r\n      <div className={writeMode ? 'postMaker active' : 'postMaker'}>\r\n        <div className=\"postMakeHeader\"> 게시물 만들기 </div>\r\n        <textarea className=\"makePost\" onChange={handleChange} value={contentmake} placeholder={`반갑습니다 ${userObj.displayName}님!`}></textarea>\r\n        <div className=\"file\">\r\n          <div className=\"fileHeader\">\r\n            <input type=\"file\" id=\"fileInput\" className=\"fileInput\" multiple={true} onChange={onFileChange}/>\r\n            <label htmlFor=\"fileInput\">\r\n              <span>이미지 추가하기</span>\r\n              <i class=\"fas fa-images fa-2x\"></i>\r\n            </label>\r\n          </div>\r\n          {attachment.length < 6 && (\r\n            attachment.map(image => (\r\n              <img className=\"images\" src={image} alt=\"photo\"/>\r\n            ))\r\n          )}\r\n          {attachment.length >= 6 && (\r\n            attachment.map(image => (\r\n              <img className=\"images\" src={image} alt=\"photo\"/>\r\n            ))\r\n          )}\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button className=\"writeModeBtn\" onClick={writeModeBtn}>\r\n            취소\r\n          </button>\r\n          <button className=\"writeModeBtn\" onClick={submitReview}>\r\n            작성\r\n          </button>\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n  const postMakeBtn = (\r\n    <div className=\"postMakeBtn\">\r\n      <div>{userObj.displayName} 님 안녕하세요!</div>\r\n      <button className=\"writeModeBtn\" onClick={writeModeBtn}>\r\n        작성\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n  const needLoginBtn = (\r\n    <button onClick={onSocialClick} name=\"google\" className=\"writeModeBtn\">\r\n      구글 로그인\r\n    </button>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postMain\">\r\n        {showImage && modal}\r\n        {postMaker}\r\n        <div className={writeMode ? 'postList active' : 'postList'}>\r\n          {userObj.displayName\r\n            ? <>{postMakeBtn}</>\r\n            : <>{needLoginBtn}</>\r\n          }\r\n          {PostList}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Post;","import React, { useEffect, useState } from 'react';\r\nimport '../../css/client.css';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst RankingContent = ({ allUsers, contentMode }) => {\r\n  const allUsersList = allUsers.filter(user => user.status ===\"재학\" || user.status ===\"졸업\")\r\n  const studentRanking = allUsers.filter(user => user.status === \"재학\");\r\n  const [loadState, setLoadState] = useState({ end: 9 });\r\n  const [showRanking, setShowRanking] = useState([]);\r\n  const [currentType, setCurrentType] = useState('전체');\r\n  const [typeContent, setTypeContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(contentMode === \"재학생랭킹\"){\r\n      setShowRanking(studentRanking.slice(0, loadState.end))\r\n    } else if(contentMode === \"전체랭킹\"){\r\n      // setShowRanking(allUsers)\r\n      switch(currentType) {\r\n        case '전체':\r\n          setShowRanking(allUsersList)\r\n          break;\r\n        case '학번':\r\n          if(typeContent) {\r\n            setShowRanking(allUsersList.filter(el => el.studentid === parseInt(typeContent)))\r\n          } else{\r\n            setShowRanking(allUsersList)\r\n          }\r\n          break;\r\n        default:\r\n          setShowRanking(allUsersList)\r\n          break;\r\n      }\r\n    }\r\n  }, [contentMode, allUsers, loadState, currentType, typeContent])\r\n\r\n  // infinite 스크롤\r\n  function onScrollAction(e) {\r\n    const rankingContainer = e.target;\r\n    if(\r\n        rankingContainer.scrollTop + rankingContainer.clientHeight\r\n        >= rankingContainer.scrollHeight\r\n      ) {\r\n        switch(studentRanking.length - loadState.end) {\r\n          case 0:\r\n            break;\r\n          case 1:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 1}))\r\n            break;\r\n          case 2:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 2}))\r\n            break;\r\n          case 3:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 3}))\r\n            break;\r\n          case 4:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 4}))\r\n            break;\r\n          default :\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 5}))\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n  const userRankingList = showRanking.map((user,index) => (\r\n    <div className=\"ranking\" key={index}>\r\n      <p className=\"item--left grade\">{index + 1}</p>\r\n      <div className=\"item--img\">\r\n        {\r\n        user.attachmentUrl ?\r\n        <img src={user.attachmentUrl} alt=\"profile-img\"/> :\r\n        <img src=\"https://d2u3dcdbebyaiu.cloudfront.net/uploads/atch_img/68/d768b6caa2c0d23507bc12087bf171a8.jpeg\" alt=\"profile-img\"/>\r\n        }\r\n      </div>\r\n      <div className=\"item--right\">\r\n        <span className=\"rating\">{user.rating}</span>\r\n        <div>\r\n          <span className=\"studentName\">{user.name}</span>\r\n          <span className=\"studentId\">{user.studentid}</span>\r\n          <span className=\"department\">{user.department}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n\r\n  function onChangeAction(e) {\r\n    setTypeContent(e.target.value)\r\n  }\r\n\r\n  function onClickAction(e) {\r\n    setCurrentType(e.target.id)\r\n  }\r\n\r\n  const rankingContentFilter = (\r\n    <>\r\n      <div className=\"dropdown dropdown--rankingContainer\">\r\n        <div className=\"dropdown--selected\">\r\n          <span className=\"selected\">{currentType}</span>\r\n          <FontAwesomeIcon icon={faCaretDown}/>\r\n        </div>\r\n        <ul className=\"dropdown--list\">\r\n          <li id=\"전체\" className=\"dropdown--list__item\" onClick={onClickAction}>전체</li>\r\n          <li id=\"학번\" className=\"dropdown--list__item\" onClick={onClickAction}>학번</li>\r\n        </ul>\r\n      </div>\r\n      <input type=\"text\" className=\"filter--rangkingContent\" placeholder=\"text me...\" onChange={onChangeAction} />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {contentMode === \"전체랭킹\" && rankingContentFilter}\r\n      <div className=\"rankingContainer\" onScroll={onScrollAction}>\r\n        {userRankingList}\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default RankingContent;","import React from 'react';\r\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst RecentGame = ({ allGame }) => {\r\n\r\n  const recentGames =  allGame.slice(0, 5).map((el, index) => (\r\n    <div className=\"game\" key={index}>\r\n      <div className=\"top\">{el.date.slice(0, 4)}년 {el.date.slice(4, 6)}월 {el.date.slice(6)}일</div>\r\n      <div className=\"bot\">\r\n        {el.winners.length === 2 ?\r\n          <>\r\n          <div className=\"winner\">\r\n            <span>Winner! ^^</span>\r\n            <div className=\"winnerInfo\">\r\n              <div className=\"winnerNames\">\r\n                <span className=\"winner__name\">{el.winners[0]}</span>\r\n                <span className=\"winner__name\">{el.winners[1]}</span>\r\n              </div>\r\n              <div className=\"winnerRatings\">\r\n                <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"loser\">\r\n            <span>loser! ㅠㅠ</span>\r\n            <div className=\"loserInfo\">\r\n              <div className=\"loserNames\">\r\n                <span className=\"loser__name\">{el.losers[0]}</span>\r\n                <span className=\"loser__name\">{el.losers[1]}</span>\r\n              </div>\r\n              <div className=\"loserRatings\">\r\n                <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </>\r\n        :\r\n          <>\r\n          <div className=\"winner\">\r\n            <span>Winner! ^^</span>\r\n            <div className=\"winnerInfo\">\r\n              <div className=\"winnerNames\">\r\n                <span className=\"winner__name\">{el.winners[0]}</span>\r\n              </div>\r\n              <div className=\"winnerRatings\">\r\n                <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"loser\">\r\n              <span>loser! ㅠㅠ</span>\r\n              <div className=\"loserInfo\">\r\n                <div className=\"loserNames\">\r\n                  <span className=\"loser__name\">{el.losers[0]}</span>\r\n                </div>\r\n                <div className=\"loserRatings\">\r\n                  <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                </div>\r\n              </div>\r\n          </div>\r\n          </>\r\n        }\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"games\">\r\n      {recentGames}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentGame","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst UserDetailChart = ({ chartMode, period, userName, allUsersByTime, userKey, userMatch }) => {\r\n    // userMatch에서 rating 가져오기\r\n    function getRating(STD_Date) {\r\n        const wanted = userMatch.find(el => el.date - STD_Date <= 0) ? userMatch.find(el => el.date - STD_Date <= 0) : allUsersByTime[userKey].start_rating\r\n        \r\n        if(typeof wanted === 'number' || typeof wanted === 'string') {\r\n            return Number(wanted)\r\n        } else if(wanted.winners.includes(userName)) {\r\n            return wanted.winnerRatingAfter[wanted.winners.indexOf(userName)]\r\n        } else if(wanted.losers.includes(userName)) {\r\n            return wanted.loserRatingAfter[wanted.losers.indexOf(userName)]\r\n        }\r\n    }\r\n\r\n    // 랭킹은 게임기록에서 가져 올 수 없음\r\n    // 랭킹은 게임기록에서 가져 올 수 없음\r\n    // 랭킹은 게임기록에서 가져 올 수 없음\r\n    // function getRanking(STD_Date) {\r\n    //     return 1\r\n    // }\r\n\r\n    function getDate(STD_Date) {\r\n        let year = STD_Date.getFullYear()\r\n        let month = STD_Date.getMonth() + 1\r\n        let day = STD_Date.getDate()\r\n\r\n        month = month >= 10 ? month : `0${month}`\r\n        day = day >= 10 ? day : `0${day}`\r\n\r\n        return `${year}${month}${day}`\r\n    }\r\n\r\n    // 1월달에만 년도 출력하도록 변경하기\r\n    // 1월달에만 년도 출력하도록 변경하기\r\n    // 1월달에만 년도 출력하도록 변경하기\r\n    function getNewDateForm(STD_Date) {\r\n        return `${STD_Date.slice(4, 6)}월 ${STD_Date.slice(6)}일`\r\n    }\r\n    \r\n    function getToday() {\r\n        const date = new Date()\r\n\r\n        return getDate(date)\r\n    }\r\n\r\n    function lastDays(day) {\r\n        const date = new Date()\r\n        const dayOfDate = date.getDate()\r\n\r\n        date.setDate(dayOfDate - day)\r\n\r\n        return getDate(date)\r\n    }\r\n\r\n    // period에 따라 labels array 생성\r\n    const getDataLabels = (period) => {\r\n        let dataLabels = []\r\n\r\n        for(let i = 0; i < period; i++) {\r\n            dataLabels.push(getNewDateForm(lastDays(period - i)))\r\n        }\r\n        dataLabels.push(getNewDateForm(getToday()))\r\n\r\n        return dataLabels\r\n    }\r\n\r\n    // period에 따라 datas 생성\r\n    const getDatas = (period) => {\r\n        let datas = []\r\n\r\n        for(let i = 0; i < period; i ++) {\r\n            datas.push(getRating(lastDays(period - i)))\r\n        }\r\n        datas.push(getRating(getToday()))\r\n\r\n        return datas\r\n    }\r\n\r\n    const dataLabels = () => {\r\n        switch(period) {\r\n            case '10':\r\n                return getDataLabels(period)\r\n            case '30':\r\n                return getDataLabels(period)\r\n            case '60':\r\n                return getDataLabels(period)\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const datas = () => {\r\n        if(chartMode === 'rating') {\r\n            switch(period) {\r\n                case '10':\r\n                    return getDatas(period)\r\n                case '30':\r\n                    return getDatas(period)\r\n                case '60':\r\n                    return getDatas(period)\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            switch(period) {\r\n                case '10':\r\n                case '30':\r\n                case '60':\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Line\r\n            data={{\r\n                labels: dataLabels(),\r\n                datasets: [{\r\n                    label: 'Rating',\r\n                    data: datas(),\r\n                    fill: false,\r\n                    borderColor: 'rgb(75, 192, 192)',\r\n                    tension: 0.1\r\n                }]\r\n            }}\r\n            options={{ maintainAspectRatio: false }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UserDetailChart","import React from 'react'\r\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst UserDetailGame = ( {userMatch} ) => {\r\n\r\n    const recentGames = userMatch.map((el, index) => \r\n      <div className=\"game\" key={index}>\r\n        <div className=\"top\">{el.date.slice(0, 4)}년 {el.date.slice(4, 6)}월 {el.date.slice(6)}일</div>\r\n        <div className=\"bot\">\r\n          {el.winners.length === 2 ?\r\n            <>\r\n            <div className=\"winner\">\r\n              <span>Winner! ^^</span>\r\n              <div className=\"winnerInfo\">\r\n                <div className=\"winnerNames\">\r\n                  <span className=\"winner__name\">{el.winners[0]}</span>\r\n                  <span className=\"winner__name\">{el.winners[1]}</span>\r\n                </div>\r\n                <div className=\"winnerRatings\">\r\n                  <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                  <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"loser\">\r\n              <span>loser! ㅠㅠ</span>\r\n              <div className=\"loserInfo\">\r\n                <div className=\"loserNames\">\r\n                  <span className=\"loser__name\">{el.losers[0]}</span>\r\n                  <span className=\"loser__name\">{el.losers[1]}</span>\r\n                </div>\r\n                <div className=\"loserRatings\">\r\n                  <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                  <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </>\r\n          :\r\n            <>\r\n            <div className=\"winner\">\r\n              <span>Winner! ^^</span>\r\n              <div className=\"winnerInfo\">\r\n                <div className=\"winnerNames\">\r\n                  <span className=\"winner__name\">{el.winners[0]}</span>\r\n                </div>\r\n                <div className=\"winnerRatings\">\r\n                  <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"loser\">\r\n                <span>loser! ㅠㅠ</span>\r\n                <div className=\"loserInfo\">\r\n                  <div className=\"loserNames\">\r\n                    <span className=\"loser__name\">{el.losers[0]}</span>\r\n                  </div>\r\n                  <div className=\"loserRatings\">\r\n                    <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    const noGames = (\r\n      <div className=\"noGame\">\r\n        <span>경기 기록이 없습니다.</span>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <>\r\n        {\r\n        userMatch.length > 0 ?\r\n          <div className=\"games\">\r\n            {recentGames}\r\n          </div>\r\n        :\r\n          noGames\r\n        }\r\n      </>\r\n    )\r\n}\r\n\r\nexport default UserDetailGame","import React, { useEffect, useRef } from 'react'\r\n\r\nconst UserDetailWinningRate = ({ allUsersByTime, userKey }) => {\r\n    const canvasRef = useRef()\r\n\r\n    // 각도 => 라디안 변환\r\n    function degToRad(degree) {\r\n        return degree * (Math.PI / 180)\r\n    }\r\n\r\n    // 기본 원 그리기\r\n    function drawBase(ctx, x, y, r, S_degree, E_degree, direction) {\r\n        ctx.beginPath()\r\n        ctx.lineWidth = 4\r\n        ctx.strokeStyle = '#7f8c8d'\r\n        ctx.arc(x, y, r, S_degree, E_degree, direction)\r\n        ctx.stroke()\r\n    }\r\n\r\n    // 승률 계산\r\n    function winningRate() {\r\n        return allUsersByTime[userKey].game_win / allUsersByTime[userKey].game_all\r\n    }\r\n\r\n    // 승 부분 그리기\r\n    function drawGreenCircle(ctx, x, y, r, S_degree, E_degree, direction) {\r\n        ctx.beginPath()\r\n        ctx.lineWidth = 40\r\n        ctx.strokeStyle = '#2EC4B6'\r\n        ctx.arc(x, y, r, S_degree, E_degree, direction)\r\n        ctx.stroke()\r\n    }\r\n\r\n    // 패 부분 그리기\r\n    function drawRedCircle(ctx, x, y, r, S_degree, E_degree, direction) {\r\n        ctx.beginPath()\r\n        ctx.lineWidth = 40\r\n        ctx.strokeStyle = '#e74c3c'\r\n        ctx.arc(x, y, r, S_degree, E_degree, direction)\r\n        ctx.stroke()\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n\r\n        // 승/패\r\n        drawBase(ctx, 90, 90, 40, 0, Math.PI * 2, false)\r\n        drawGreenCircle(ctx, 90, 90, 66, degToRad(270), degToRad(270 - 360 * winningRate()), true)\r\n        drawRedCircle(ctx, 90, 90, 66, degToRad(270), degToRad(270 - 360 * winningRate()), false)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <canvas width=\"180\" height=\"180\" ref={canvasRef} className=\"canvas\"></canvas>\r\n            <span className=\"hover\">Hover me!</span>\r\n            <div className=\"gameRecord\">\r\n                <span className=\"record--left\">{allUsersByTime[userKey].game_win} 승</span>\r\n                <span className=\"record--right\">{allUsersByTime[userKey].game_lose} 패</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDetailWinningRate","import React, { useEffect, useRef } from 'react'\r\n\r\nconst UserDetailRankingRate = ({ allUsersByTime, userKey }) => {\r\n    const canvasRef = useRef()\r\n\r\n    // 각도 => 라디안 변환\r\n    function degToRad(degree) {\r\n        return degree * (Math.PI / 180)\r\n    }\r\n\r\n    // 기본 원 그리기\r\n    function drawBase(ctx, x, y, r, S_degree, E_degree, direction) {\r\n        ctx.beginPath()\r\n        ctx.lineWidth = 4\r\n        ctx.strokeStyle = '#7f8c8d'\r\n        ctx.arc(x, y, r, S_degree, E_degree, direction)\r\n        ctx.stroke()\r\n    }\r\n\r\n    // 승 부분 그리기\r\n    // 상위 퍼센티지에서는 반대로 걸어줘야함\r\n    // ex) 상위 0.01 => drawGreenCircle(ctx, x, y, r, degToRad(269), degToRad(270 - (360 * (1 - 0.01)) + 0.5), true)\r\n    function drawGreenCircle(ctx, x, y, r, S_degree, E_degree, direction) {\r\n        ctx.beginPath()\r\n        ctx.lineWidth = 40\r\n        ctx.strokeStyle = '#2EC4B6'\r\n        ctx.arc(x, y, r, S_degree, E_degree, direction)\r\n        ctx.stroke()\r\n    }\r\n\r\n    // 패 부분 그리기\r\n    function drawRedCircle(ctx, x, y, r, S_degree, E_degree, direction) {\r\n        ctx.beginPath()\r\n        ctx.lineWidth = 40\r\n        ctx.strokeStyle = '#e74c3c'\r\n        ctx.arc(x, y, r, S_degree, E_degree, direction)\r\n        ctx.stroke()\r\n    }\r\n\r\n    // 레이팅 정렬 하기\r\n    function sortRanking(arr) {\r\n        return arr.concat().sort(function(a, b) {return b.rating - a.rating})\r\n    }\r\n\r\n    // 레이팅으로 user 랭킹 상위퍼센티지 구하기\r\n    function rankingRate() {\r\n        const sortedArr = sortRanking(allUsersByTime)\r\n\r\n        const target = sortedArr.filter(el => el.name === allUsersByTime[userKey].name)\r\n        const ranking = sortedArr.indexOf(target[0]) + 1\r\n        \r\n        // 본인 순위 / 전체 인원\r\n        return ( ranking / allUsersByTime.length )\r\n    }\r\n\r\n    // 랭킹 수치 보정\r\n    const newRankingRate = () => {\r\n        return (rankingRate() * 100).toFixed(2)\r\n    }\r\n    console.log(newRankingRate());\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n\r\n        // 상위 퍼센티지\r\n        drawBase(ctx, 90, 90, 40, 0, Math.PI * 2, false)\r\n        drawGreenCircle(ctx, 90, 90, 66, degToRad(270), degToRad(270 - (360 * (1 - rankingRate()))), true)\r\n        drawRedCircle(ctx, 90, 90, 66, degToRad(270), degToRad(270 - (360 * (1 - rankingRate()))), false)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <canvas width=\"180\" height=\"180\" ref={canvasRef} className=\"canvas\"></canvas>\r\n            <span className=\"hover\">Hover me!</span>\r\n            <div className=\"gameRecord\">\r\n                <span className=\"record--left\">상위</span>\r\n                <span className=\"record--right\">{newRankingRate()} %</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDetailRankingRate","import React, { useEffect, useState } from 'react';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport UserDetailChart from './UserDetailChart';\r\nimport UserDetailGame from './UserDetailGame';\r\nimport { dbService } from '../../fbase';\r\nimport UserDetailWinningRate from './UserDetailPercentage';\r\nimport UserDetailRankingRate from './UserDetailRankingRate';\r\n\r\nconst UserDetail = ({ allUsersByTime, setIsDetailOn, userKey }) => {\r\n    const [chartMode, setChartMode] = useState('rating')\r\n    const [period, setPeriod] = useState('30')\r\n    const [userMatch, setUserMatch] = useState([])\r\n    const userName = allUsersByTime[userKey].name\r\n    \r\n    userMatch.sort(function(a, b) {\r\n        return b.date - a.date\r\n    })\r\n    \r\n    // 해당유저의 경기기록만 가져오기\r\n    // const userMatch = allGame.filter(el => \r\n    //     el.winners.includes(userName) || el.losers.includes(userName)).sort(function(a, b) {\r\n    //         return b.date - a.date\r\n    //     }\r\n    // )\r\n\r\n    const info = (\r\n        <>\r\n            <div className=\"detail--profile\">\r\n                <img src={allUsersByTime[userKey].attachmentUrl} alt=\"detail profile\" />\r\n            </div>\r\n            <div>\r\n                <span className=\"detail__name\">{allUsersByTime[userKey].name}</span>\r\n                <span className=\"detail__department\">{allUsersByTime[userKey].department}과</span>\r\n                <span className=\"detail__status\">{allUsersByTime[userKey].studentid}학번 / {allUsersByTime[userKey].status}</span>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    function closeDetail() {\r\n        setIsDetailOn(false)\r\n    }\r\n\r\n    function periodHandler(e) {\r\n        setPeriod(e.target.dataset.period)\r\n    }\r\n\r\n    function chartModeHandler(e) {\r\n        setChartMode(e.target.dataset.mode)\r\n    }\r\n\r\n    const periodFilter = (\r\n        <>\r\n        <div className=\"button button--userDetail\" onClick={periodHandler} data-period=\"10\">10일</div>\r\n        <div className=\"button button--userDetail\" onClick={periodHandler} data-period=\"30\">30일</div>\r\n        <div className=\"button button--userDetail\" onClick={periodHandler} data-period=\"60\">60일</div>\r\n        </>\r\n    )\r\n\r\n    const chartFilter = (\r\n        <div className=\"dropdown dropdown--userDetail\">\r\n          <div className=\"dropdown--selected\">\r\n            <span className=\"selected\">{chartMode === 'rating' ? '점수' : '순위'}</span>\r\n            <FontAwesomeIcon icon={faCaretDown}/>\r\n          </div>\r\n          <ul className=\"dropdown--list\">\r\n            <li className=\"dropdown--list__item\" onClick={chartModeHandler} data-mode=\"rating\">점수</li>\r\n            <li className=\"dropdown--list__item\" onClick={chartModeHandler} data-mode=\"ranking\">순위</li>\r\n          </ul>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        dbService.collection('user').doc(allUsersByTime[userKey].name).collection('game_record').get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                const userMatchObj = {\r\n                    date: doc.data().date,\r\n                    loserRatingAfter: doc.data().loserRatingAfter,\r\n                    losers: doc.data().losers,\r\n                    ratingChange: doc.data().ratingChange,\r\n                    winnerRatingAfter: doc.data().winnerRatingAfter,\r\n                    winners: doc.data().winners\r\n                }\r\n                setUserMatch(userMatch => [...userMatch, userMatchObj])\r\n            })\r\n        })\r\n    }, [allUsersByTime, userKey])\r\n\r\n    return (\r\n        <div className=\"detailContainer\">\r\n            <div className=\"top\">\r\n                <div className=\"top--left\">\r\n                    {info}\r\n                </div>\r\n                <div className=\"top--circleRate winningRate\">\r\n                    <UserDetailWinningRate allUsersByTime={allUsersByTime} userKey={userKey} />    \r\n                </div>\r\n                <div className=\"top--circleRate rankingRate\">\r\n                    <UserDetailRankingRate allUsersByTime={allUsersByTime} userKey={userKey} />\r\n                </div>\r\n            </div>\r\n            <div className=\"bottom\">\r\n                <div className=\"bottom--left\">\r\n                    {periodFilter}\r\n                    {chartFilter}\r\n                    <UserDetailChart chartMode={chartMode} period={period} userName={userName} allUsersByTime={allUsersByTime} userKey={userKey} userMatch={userMatch} />\r\n                </div>\r\n                <div className=\"bottom--right\">\r\n                    {/* 최근 경기 */}\r\n                    <UserDetailGame userMatch={userMatch} />\r\n                </div>\r\n            </div>\r\n            <FontAwesomeIcon icon={faTimes} className=\"close\" onClick={closeDetail}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDetail;","import React, { useEffect, useState } from 'react';\r\nimport UserDetail from './UserDetail';\r\n\r\nconst UserInfo = ({ allUsers }) => {\r\n  const allUsersByTime = [...allUsers];\r\n  allUsersByTime.sort(function(a,b){\r\n    return a.time > b.time ? -1 : a.time < b.time ? 1: 0;\r\n  })\r\n  const [mapList, setMapList] = useState([])\r\n  const [isDetailOn, setIsDetailOn] = useState(false)\r\n  const [filterName, setFilterName] = useState('')\r\n  const [userKey, setUserKey] = useState(0)\r\n\r\n  function showDetail(e) {\r\n    setIsDetailOn(true)\r\n    setUserKey(e.target.dataset.num)\r\n  }\r\n\r\n  const userInfo = mapList.map((user,index) => (\r\n    <div className=\"userInfo\" key={index}>\r\n      <div>\r\n        <img className=\"userImage\" src={user.attachmentUrl} onClick={showDetail} data-num={index} alt=\"profile--detail\"/>\r\n      </div>\r\n      <div className=\"userInfoRightSide\">\r\n        <div className=\"userInfoUpSide\">\r\n          <div>\r\n            <span className=\"studentName\">{user.name}</span>\r\n            <span className=\"userStatus\">{user.status}</span>\r\n          </div>\r\n          <div className=\"win_lose\">\r\n            <div className=\"department\">{user.game_win}승</div>\r\n            <div className=\"department\">{user.game_lose}패</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userInfoBottomSide\">\r\n          <span className=\"rating\">레이팅: {user.rating}</span>\r\n          <span className=\"department\">{user.department}</span>\r\n          {/* <span className=\"department\">승률: {Math.round(((user.game_win)/(user.game_all))*100)}%</span> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n  function onChangeAction(e) {\r\n    setFilterName(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(filterName) {\r\n      setMapList(allUsersByTime.filter(el => el.name === filterName))\r\n    } else {\r\n      setMapList(allUsersByTime.sort(function(a,b){\r\n        return a.time > b.time ? -1 : a.time < b.time ? 1: 0;\r\n      }))\r\n    }\r\n  }, [filterName])\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text\" className=\"filter--info\" placeholder=\"text name...\" onChange={onChangeAction} />\r\n      <div className=\"usersInformation\">\r\n        <div className=\"userList\">\r\n          {userInfo}\r\n        </div>\r\n        {isDetailOn && <UserDetail setIsDetailOn={setIsDetailOn} allUsersByTime={allUsersByTime} userKey={userKey} />}\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default UserInfo;","import React, { useState } from 'react';\r\nimport Post from '../component/client/Post';\r\nimport RankingContent from '../component/client/RankingContent';\r\nimport RecentGame from '../component/client/RecentGame';\r\nimport UserInfo from '../component/client/UserInfo';\r\nimport '../css/client.css';\r\nimport '../css/client_mugil.css';\r\n\r\nconst ClientMain = ({userObj, allUsers, allGame}) => {\r\n  const [contentMode, setContentMode] = useState(\"재학생랭킹\");\r\n\r\n  const listOnClicked = e => {\r\n    e.preventDefault();\r\n    setContentMode(e.target.id)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"client-container\">\r\n        <div className=\"nav\">\r\n              <ul>\r\n                <li id=\"재학생랭킹\" onClick={listOnClicked}>재학생 랭킹</li>\r\n                <li id=\"전체랭킹\" onClick={listOnClicked}>전체 랭킹</li>\r\n                <li id=\"선수상세정보\" onClick={listOnClicked}>선수 상세정보</li>\r\n                <li id=\"게시글\" onClick={listOnClicked}>게시글</li>\r\n              </ul>\r\n              {/* 로그인 기능 추가 시 */}\r\n              {/* {userObj &&\r\n                  <div className=\"signedUser\">\r\n                  <img className=\"signedUser--img\" src={userObj.photoURL} alt=\"\"></img>\r\n                  <div className=\"signedUser--txt\">\r\n                      <p className=\"signedUser__name\">{userObj.displayName}</p>\r\n                      <p className=\"signedUser__email\">{userObj.email}</p>\r\n                  </div>\r\n                  </div>\r\n              } */}\r\n              <footer>\r\n                  <p className=\"footer--top\">&copy; 2021, Built by</p>\r\n                  <p className=\"footer--bot\">gilmujjang & Hyeon-Gwang</p>\r\n              </footer>\r\n          </div>\r\n        <div className=\"ClientMain\">\r\n          {[\"재학생랭킹\",\"전체랭킹\"].includes(contentMode) && <RankingContent allGame={allGame} allUsers={allUsers} contentMode={contentMode} setContentMode={setContentMode}/>}\r\n          {contentMode===\"선수상세정보\" && <UserInfo allUsers={allUsers} />}\r\n          {contentMode===\"게시글\" && <Post userObj={userObj}/>}\r\n        </div>\r\n        {\r\n        !['선수상세정보', '게시글'].includes(contentMode) &&\r\n        <div className=\"aside\">\r\n          <div className=\"aside1\">\r\n            <RecentGame allGame={allGame}/>\r\n          </div>\r\n          <div className=\"aside2\">\r\n            <h2>aside2</h2>\r\n          </div>\r\n        </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientMain;\r\n","import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from '../router/Auth';\r\nimport AdminMain from '../router/AdminMain';\r\nimport ClientMain from '../router/ClientMain';\r\nimport {React, useEffect, useState } from 'react';\r\nimport { dbService } from '../fbase'\r\n\r\n\r\n\r\nconst AppRouter = ({ userObj }) => {\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [allGame, setAllGame] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"user\").orderBy(\"rating\",\"desc\").get().then(snapshot => {\r\n      snapshot.docs.map(doc => {\r\n        const userObject = {\r\n          name:doc.data().name,\r\n          rating:doc.data().rating,\r\n          start_rating: doc.data().start_rating,\r\n          game_all:doc.data().game_all,\r\n          game_win:doc.data().game_win,\r\n          game_lose:doc.data().game_lose,\r\n          studentid:doc.data().studentid,\r\n          department:doc.data().department,\r\n          status: doc.data().status,\r\n          time:doc.data().time,\r\n          attachmentUrl:doc.data().attachmentUrl\r\n        }\r\n        setAllUsers(allUsers => [...allUsers, userObject]);\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"game\").orderBy(\"write_time\",\"desc\").limit(10).get().then(snapshot => {\r\n      snapshot.docs.map(doc => {\r\n        const gameObject = {\r\n          winners: doc.data().winners,\r\n          losers: doc.data().losers,\r\n          ratingChange: doc.data().ratingChange,\r\n          percentage: doc.data().percentage,\r\n          date: doc.data().date,\r\n          time: doc.data().write_time,\r\n          id: doc.data().date+'-'+doc.data().write_time,\r\n          winnerRatingAfter: doc.data().winnerRatingAfter,\r\n          loserRatingAfter: doc.data().loserRatingAfter\r\n        }\r\n        setAllGame(allGame => [...allGame, gameObject]);\r\n      })\r\n    })\r\n  }, [])\r\n  return(\r\n    <Router>\r\n      <Route exact path = \"/\">\r\n        <ClientMain allUsers={allUsers} allGame={allGame} userObj={userObj}/>\r\n      </Route>\r\n      <Switch>\r\n        {userObj.displayName ? (\r\n        <Route path=\"/admin\">\r\n          <AdminMain userObj={userObj}  allUsers={allUsers} allGame={allGame}/>\r\n        </Route>\r\n         ) : (\r\n          <Route exact path = \"/admin\">\r\n            <Auth/>\r\n          </Route>\r\n         )}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default AppRouter;","import './style.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport AppRouter from \"./component/Router\";\r\nimport { authService } from \"./fbase\";\r\n\r\nfunction App() {\r\n  const user = authService.currentUser;\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState({displayName: null});\r\n  useEffect( () => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          photoUrl: user.photoURL,\r\n        });\r\n      } else {\r\n        authService.signInAnonymously()\r\n        .catch((error) => {\r\n          console.log(error.code)\r\n          console.log(error.message)\r\n        })\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, [])\r\n\r\n\r\n  const refreshUser = () => {\r\n    setUserObj(authService.currentUser);\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter \r\n          refreshUser = {refreshUser}\r\n          isLoggedIn={Boolean(userObj)} \r\n          userObj={userObj}\r\n        />\r\n        ):(\r\n          \"Initailizing...\")}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}