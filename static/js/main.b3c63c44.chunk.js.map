{"version":3,"sources":["fbase.js","router/Auth.js","component/admin/Header.js","component/admin/CreateUser.js","component/admin/RegiMatch.js","component/admin/UserList.js","component/admin/MatchList.js","router/AdminMain.js","component/client/Post.js","component/client/RankingContent.js","component/client/RecentGame.js","component/client/UserInfo.js","router/ClientMain.js","component/Router.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","signInWithEmailAndPassword","message","className","icon","faTwitter","color","size","style","marginBottom","type","placeholder","required","Header","history","useHistory","class","onClick","signOut","push","CreateUser","studentid","department","start_rating","rating","status","inputs","setInputs","attachment","setAttachment","handleChange","e","userMakeSubmit","alert","attachmentUrl","attachmentRef","ref","child","putString","response","getDownloadURL","now","Date","year","getFullYear","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","time","userProfile","parseInt","game_all","game_win","game_lose","collection","doc","set","userMaker","Form","Input","id","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","src","alt","Button","RegiMatch","allUsers","increment","FieldValue","searchWinner","setSearchWinner","winnersRating","setWinnersRating","searchLoser","setSearchLoser","losersRating","setLosersRating","gameUser","setGameUser","winners","setWinners","losers","setLosers","startDate","setStartDate","allUserList","setAllUserList","useEffect","map","user","winnerChange","key","length","includes","concat","where","get","then","snapshot","forEach","data","Number","isInteger","loserChange","matchSubmit","winnerAverageRating","loserAverageRating","Math","max","min","percentage","pow","toFixed","reversePercentage","RatingChange","round","matchDate","winnerRatingAfter","winner","loserRatingAfter","loser","match","winnerRatingBefore","loserRatingBefore","ratingChange","write_time","NaN","update","shift","regiMatch","onKeyPress","i","selected","UserList","RecentUser","Toast","ToastHeader","MatchList","allGame","deleteClick","winTeam","loseTeam","changedRating","game","delete","RecentGame","AdminMain","Post","writeMode","setWriteMode","everyPost","setEveryPost","title","content","post","setPost","limit","docs","postObject","writter","recent_fix","writeModeBtn","PostList","classNames","postMaker","editor","ClassicEditor","getData","console","log","RankingContent","contentMode","studentRanking","setContentMode","filter","end","loadState","setLoadState","showRanking","setShowRanking","currentType","setCurrentType","typeContent","setTypeContent","slice","el","userRankingList","index","onClickAction","rankingContentFilter","faCaretDown","onScroll","rankingContainer","scrollTop","clientHeight","scrollHeight","prevLoadState","recentGames","faCaretUp","UserInfo","allUsersByTime","sort","b","userInfo","studentId","ClientMain","userObj","listOnClicked","AppRouter","isLoggedIn","setAllUsers","setAllGame","orderBy","userObject","gameObject","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","displayName","uid","updateProfile","args","currentUser","signInAnonymously","catch","code","refreshUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3c63c44.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_ODOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"../fbase\";\r\nimport react from \"react\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true)\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event;\r\n    if(name === \"email\"){\r\n      setEmail(value)\r\n    } else if (name === \"password\") {\r\n      setPassword(value)\r\n    }\r\n  };\r\n  const onSubmit = async(event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n        data = await authService.signInWithEmailAndPassword(email, password)\r\n  \r\n    } catch(error){\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n        name = \"email\" \r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        required \r\n        value={email}\r\n        onChange={onChange}\r\n        className=\"authInput\"/>\r\n\r\n        <input \r\n        name = \"password\" \r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        required \r\n        value={password}\r\n        onChange={onChange}\r\n        className=\"authInput\"/>\r\n\r\n        <input \r\n          className=\"authInput authSubmit\"\r\n          type=\"submit\" \r\n          value=\"Log In\">\r\n        </input>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { authService } from \"../../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\")\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"headerText\">KOTC 랭킹시스템 관리자 페이지</span>\r\n      <i class=\"fas fa-sign-out-alt fa-2x logout needMargin\"  onClick={onLogOutClick}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { React, useState } from 'react';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { dbService, storageService } from '../../fbase';\r\n\r\nconst CreateUser = () => {\r\n  const [inputs, setInputs] = useState({\r\n    name: '',\r\n    studentid:'',\r\n    department:'',\r\n    start_rating:'',\r\n    rating:'',\r\n    status:'재학'\r\n  });\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n\r\n  const { name, studentid, department, start_rating, status} = inputs;\r\n\r\n  const handleChange = (e) => {\r\n    const {value, name} = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const userMakeSubmit = async(e) => {\r\n    e.preventDefault();\r\n    if(name === ''){\r\n      alert(\"이름을 입력하세요\")\r\n      return;\r\n    }\r\n    if(studentid === ''){\r\n      alert(\"학번을 입력하세요\")\r\n      return;\r\n    }\r\n    if(department === ''){\r\n      alert(\"학과를 입력하세요\")\r\n      return;\r\n    }\r\n    if(start_rating === ''){\r\n      alert(\"초기 레이팅을 입력하세요\")\r\n      return;\r\n    }\r\n    if(status === ''){\r\n      alert(\"재학상태를 입력하세요\")\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\"){\r\n      const attachmentRef = storageService.ref().child(name);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    \r\n    let now = new Date();   \r\n    let year = now.getFullYear(); // 년도\r\n    let month = now.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    let date = now.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    let hours = now.getHours(); // 시\r\n    if(hours<10){\r\n      hours = 0+''+hours\r\n    }\r\n    let minutes = now.getMinutes();  // 분\r\n    if(minutes<10){\r\n      minutes = 0+''+minutes\r\n    }\r\n    let seconds = now.getSeconds();  // 초\r\n    if(seconds<10){\r\n      seconds = 0+''+seconds\r\n    }\r\n    const time = (year + '' + month + '' + date + '' + hours + '' + minutes + '' + seconds)\r\n\r\n    const userProfile = {\r\n      name: name,\r\n      studentid: parseInt(studentid),\r\n      department: department,\r\n      start_rating: parseInt(start_rating),\r\n      rating: parseInt(start_rating),\r\n      status: status,\r\n      time:time,\r\n      attachmentUrl,\r\n      game_all:0,\r\n      game_win:0,\r\n      game_lose:0,\r\n    }\r\n    await dbService.collection(\"user\").doc(name).set(userProfile);\r\n\r\n    setAttachment(\"\");\r\n    setInputs({\r\n      name: '',\r\n      studentid:'',\r\n      department:'',\r\n      start_rating:'',\r\n      rating:'',\r\n      status:'재학'\r\n    })\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  const onFileChange = (event) => {\r\n    const {target:{files},\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: {result},\r\n      } = finishedEvent;\r\n      setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  //위에는 함수 밑에는 jsx\r\n  \r\n  const userMaker = (\r\n    <div className='userMaker'>\r\n      <Form className=\"noteWriter\">\r\n        <div className=\"userProfileImage\">\r\n          <span>프사</span>\r\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" onChange={onFileChange}/>\r\n        </div>\r\n        {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img className=\"profileImg\" src={attachment} alt=\"profile image\"/>\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n        <div className=\"needMargin\">\r\n          <span>이름</span>\r\n          <Input type=\"text\" name='name' onChange={handleChange} value={name}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>학번</span>\r\n          <Input type=\"text\" name='studentid' onChange={handleChange} value={studentid}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>학과</span>\r\n          <Input type=\"text\" name='department' onChange={handleChange} value={department}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>초기레이팅</span>\r\n          <Input type=\"text\" name='start_rating' onChange={handleChange} value={start_rating}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>상태</span>\r\n          <Input type=\"select\" name='status' onChange={handleChange} value={status}>\r\n            <option>재학</option>\r\n            <option>졸업</option>\r\n          </Input>\r\n        </div>\r\n        <Button className=\"needMargin\" onClick={userMakeSubmit}>전송</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"ShortBox\">\r\n      {userMaker}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.min.css'\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { dbService } from '../../fbase';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst RegiMatch = ({allUsers}) => {\r\n  const increment = firebase.firestore.FieldValue.increment(1);\r\n  const [searchWinner,setSearchWinner] = useState(\"\");\r\n  const [winnersRating, setWinnersRating] = useState([]);\r\n  const [searchLoser,setSearchLoser] = useState(\"\");\r\n  const [losersRating, setLosersRating] = useState([]);\r\n  const [gameUser, setGameUser] = useState(\"\");\r\n  const [winners, setWinners] = useState([]);\r\n  const [losers, setLosers] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [allUserList, setAllUserList] = useState([])\r\n\r\n  useEffect(() => {\r\n    allUsers.map(user => {\r\n      setAllUserList(allUserList => [...allUserList, user.name])\r\n    })\r\n  }, [allUsers])\r\n\r\n  const stateInit = () => {\r\n    setSearchWinner('');\r\n    setSearchLoser('');\r\n    setWinners([]);\r\n    setLosers([]);\r\n    setGameUser([]);\r\n    setWinnersRating([]);\r\n    setLosersRating([]);\r\n  }\r\n\r\n  const winnerChange = e => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      if(winners.length>=2){\r\n        alert('2명이하만')\r\n        setSearchWinner('');\r\n        return;\r\n      } else {  //2명 이하이고\r\n        if(allUserList.includes(searchWinner)){  //유저목록에 있으면\r\n          if(gameUser.includes(searchWinner)){  //이면서 들어가있으면 안됨\r\n            alert(\"이미 등록된 유저입니다\")\r\n            setSearchWinner('');\r\n            return;\r\n          } else {\r\n            setWinners(winners.concat(searchWinner))\r\n            setGameUser(gameUser.concat(searchWinner))\r\n            dbService.collection(\"user\").where(\"name\",\"==\",searchWinner).get().then((snapshot) => {\r\n              snapshot.forEach((doc) => {\r\n                setWinnersRating(winnersRating.concat(doc.data().rating));\r\n              })\r\n            })\r\n            setSearchWinner('');  \r\n          }  \r\n            \r\n        } else if(Number.isInteger(parseInt(searchWinner))){\r\n          setWinners(winners.concat(searchWinner))\r\n          setSearchWinner('');\r\n          setWinnersRating(winnersRating.concat(Number(searchWinner)));  \r\n\r\n        } else { //등록된 유저가 아니면\r\n          alert('등록된 유저가 아닙니다')\r\n          setSearchWinner('');\r\n        }\r\n      }\r\n    } else { \r\n      setSearchWinner(e.target.value);\r\n    }\r\n  };\r\n\r\n  const loserChange = e => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      if(losers.length>=2){\r\n        alert('2명이하만')\r\n        setSearchLoser('');\r\n        return;\r\n      } else {  //2명 이하이고\r\n        if(allUserList.includes(searchLoser)){  //유저목록에 있으면\r\n          if(gameUser.includes(searchLoser)){\r\n            alert(\"이미 등록된 유저입니다\")\r\n            setSearchLoser('');\r\n            return;\r\n          } else {\r\n            setGameUser(gameUser.concat(searchLoser))\r\n            setLosers(losers.concat(searchLoser))\r\n            dbService.collection(\"user\").where(\"name\",\"==\",searchLoser).get().then((snapshot) => {\r\n              snapshot.forEach((doc) => {\r\n                setLosersRating(losersRating.concat(doc.data().rating));\r\n              })\r\n            })\r\n            setSearchLoser('');\r\n          }\r\n\r\n        } else if(Number.isInteger(parseInt(searchLoser))){\r\n          setLosers(losers.concat(searchLoser))\r\n          setSearchLoser('');\r\n          setLosersRating(losersRating.concat(Number(searchLoser)));\r\n        } else { //등록된 유저가 아니면\r\n          alert('등록된 유저가 아닙니다')\r\n          setSearchLoser('');\r\n        }\r\n      }\r\n    } else { \r\n      setSearchLoser(e.target.value);\r\n    }\r\n  };\r\n\r\n  const matchSubmit = async(e) => {\r\n    e.preventDefault();\r\n    let winnerAverageRating = winnersRating[0];\r\n    let loserAverageRating = losersRating[0];\r\n    if(winnersRating.length==2){\r\n      winnerAverageRating = (Math.max(winnersRating[0],winnersRating[1])+2*Math.min(winnersRating[0],winnersRating[1]))/3\r\n    }\r\n    if(losersRating.length==2){\r\n      loserAverageRating = (Math.max(losersRating[0],losersRating[1])+2*Math.min(losersRating[0],losersRating[1]))/3\r\n    }\r\n    const percentage = (1/(1+(Math.pow(10,(loserAverageRating-winnerAverageRating)/400)))).toFixed(2)\r\n    const reversePercentage = (1-percentage).toFixed(2)\r\n    const RatingChange = Math.round(reversePercentage*32)\r\n    if(winners.length===0){\r\n      alert('승자를 입력하세요');\r\n      return;\r\n    }\r\n    if(losers.length===0){\r\n      alert('패자를 입력하세요');\r\n      return;\r\n    }\r\n    if(winners.length !== losers.length){\r\n      alert(\"인원을 맞추시오\");\r\n      return;\r\n    }\r\n\r\n    let now = new Date();   \r\n    let year = now.getFullYear(); // 년도\r\n    let month = now.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    let date = now.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    let hours = now.getHours(); // 시\r\n    if(hours<10){\r\n      hours = 0+''+hours\r\n    }\r\n    let minutes = now.getMinutes();  // 분\r\n    if(minutes<10){\r\n      minutes = 0+''+minutes\r\n    }\r\n    let seconds = now.getSeconds();  // 초\r\n    if(seconds<10){\r\n      seconds = 0+''+seconds\r\n    }\r\n    const time = (year + '' + month + '' + date + '' + hours + '' + minutes + '' + seconds)\r\n\r\n    year = startDate.getFullYear(); // 년도\r\n    month = startDate.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    date = startDate.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    const matchDate = (year + '' + month + '' + date)\r\n\r\n    let winnerRatingAfter = winnersRating.map(winner => winner + RatingChange)\r\n    let loserRatingAfter = losersRating.map(loser => loser - RatingChange)\r\n\r\n    const match = {\r\n      winners: winners,\r\n      winnerRatingBefore: winnersRating,\r\n      winnerRatingAfter: winnerRatingAfter,\r\n      losers: losers,\r\n      loserRatingBefore: losersRating,\r\n      loserRatingAfter: loserRatingAfter,\r\n      percentage: Math.round(percentage*100),\r\n      ratingChange: RatingChange,\r\n      date: matchDate,\r\n      write_time: time\r\n    }\r\n\r\n    if(percentage==NaN){\r\n      alert(\"percentage is never NaN\");\r\n      return;\r\n    }\r\n\r\n    await dbService.collection(\"game\").doc(matchDate+'-'+time).set(match);\r\n    \r\n    await winners.map(winner => {\r\n      dbService.collection(\"user\").doc(winner).collection(\"game_record\").doc(matchDate+'-'+time).set(match)\r\n      dbService.collection(\"user\").doc(winner).update({\r\n        rating: winnersRating.shift() + RatingChange,\r\n        game_all: increment,\r\n        game_win: increment\r\n      })\r\n    })\r\n    await losers.map(loser => {\r\n      dbService.collection(\"user\").doc(loser).collection(\"game_record\").doc(matchDate+'-'+time).set(match)\r\n      dbService.collection(\"user\").doc(loser).update({\r\n        rating: losersRating.shift() - RatingChange,\r\n        game_all: increment,\r\n        game_lose: increment\r\n      })\r\n    })\r\n    stateInit();\r\n  }\r\n\r\n\r\n  const regiMatch = (\r\n    <div className='userMaker'>\r\n      <Form className=\"noteWriter\">\r\n        <div className=\"matchResult\">\r\n          <span>\r\n            <div>승</div>\r\n            <Input type=\"text\" name='win' value={searchWinner} onChange={winnerChange} onKeyPress={winnerChange}/>\r\n            <div className=\"users playerView\">\r\n              {winners.map(i => (\r\n                <span className=\"targetUser\">{i}</span>\r\n              ))}\r\n            </div>\r\n          </span>\r\n          <span className=\"versus\"> VS </span>\r\n          <span>\r\n            <div>패</div>\r\n            <Input type=\"text\" name='lose' value={searchLoser} onChange={loserChange} onKeyPress={loserChange}/>\r\n            <div className=\"users\">\r\n              <div className=\"flexWrap\">\r\n                {losers.map(i => (\r\n                  <span className=\"targetUser\">{i}</span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div className=\"datepicker\">\r\n          <span className=\"needMargin\">시합일</span>\r\n          <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n        </div>\r\n        <Button className=\"needMargin\" onClick={matchSubmit}>전송</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"ShortBox\">\r\n      {regiMatch}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegiMatch;\r\n","import { React } from 'react';\r\nimport { Toast, ToastHeader } from 'reactstrap';\r\n\r\nconst UserList = ({allUsers}) => {\r\n\r\n  const RecentUser = allUsers.map(user => (\r\n    <Toast>\r\n      <ToastHeader>\r\n        <div className=\"spaceBetween\">\r\n          <div>{user.name}__</div>\r\n          <div>{user.status}</div>\r\n        </div>\r\n      </ToastHeader>\r\n      <div className=\"needMargin spaceBetween\">\r\n        <div>학번 : {user.studentid}</div>\r\n        <div>학과 : {user.department}</div>\r\n      </div>\r\n      <div className=\"needMargin spaceBetween\">\r\n        <div>Rating : {user.rating}</div>\r\n        <div>전적 : {user.game_win}승 {user.game_lose}패</div>\r\n      </div>\r\n    </Toast>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"LongBox\">\r\n      {RecentUser}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { React, useEffect, useState } from 'react';\r\nimport { Toast, ToastHeader } from 'reactstrap';\r\nimport { dbService } from '../../fbase';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst MatchList = ({allGame}) => {\r\n\r\n  const deleteClick = async(e) => {\r\n    let winTeam = []\r\n    let loseTeam = []\r\n    let changedRating = 0\r\n    allGame.map(game => {\r\n      if(game.id == e.target.id){\r\n        winTeam=winTeam.concat(game.winners)\r\n        loseTeam=loseTeam.concat(game.losers)\r\n        changedRating =game.ratingChange\r\n      }\r\n    })\r\n\r\n    await winTeam.map(winner => {\r\n      dbService.collection(\"user\").doc(winner).collection(\"game_record\").doc(e.target.id).delete()\r\n      dbService.collection(\"user\").doc(winner).update({\r\n        rating:firebase.firestore.FieldValue.increment(-changedRating),\r\n        game_all:firebase.firestore.FieldValue.increment(-1),\r\n        game_win:firebase.firestore.FieldValue.increment(-1)\r\n      })\r\n    })\r\n\r\n    await loseTeam.map(loser => {\r\n      dbService.collection(\"user\").doc(loser).collection(\"game_record\").doc(e.target.id).delete()\r\n      dbService.collection(\"user\").doc(loser).update({\r\n        rating:firebase.firestore.FieldValue.increment(changedRating),\r\n        game_all:firebase.firestore.FieldValue.increment(-1),\r\n        game_lose:firebase.firestore.FieldValue.increment(-1)\r\n      })\r\n    })\r\n    await dbService.collection(\"game\").doc(e.target.id).delete()\r\n    alert(e.target.id+' 를 삭제했습니다')\r\n  }\r\n\r\n  const RecentGame = allGame.map(game => (\r\n    <div className=\"displayFlex\">\r\n      <Toast>\r\n        <ToastHeader>\r\n          {game.winners.map(i => (\r\n          <span className=\"targetUser\">{i}</span>\r\n          ))}\r\n          vs \r\n          {game.losers.map(i => (\r\n          <span className=\"targetUser\">{i}</span>\r\n          ))}\r\n        </ToastHeader>\r\n        <div className=\"needMargin flexWrap spaceBetween\">\r\n          <div>레이팅변화 : {game.ratingChange}</div>\r\n          <div>승률예측 : {game.percentage}%</div>\r\n        </div>\r\n        <div className=\"needMargin flexWrap spaceBetween\">\r\n          등록시각 : {game.time}\r\n        </div>\r\n      </Toast>\r\n      <i class=\"far fa-trash-alt deleteIcon\" id={game.date+'-'+game.time} onClick={deleteClick}></i>\r\n    </div>\r\n  ))\r\n \r\n  return (\r\n    <div className=\"LongBox\">\r\n      <div className=\"gameListHeader\">\r\n        <span>승리팀</span>\r\n        <span>패배팀</span>\r\n      </div>\r\n      <div>{RecentGame}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchList;\r\n","import { React, useEffect, useState } from 'react';\r\nimport { dbService } from '../fbase';\r\nimport Header from '../component/admin/Header';\r\nimport CreateUser from '../component/admin/CreateUser'\r\nimport RegiMatch from '../component/admin/RegiMatch'\r\nimport UserList from '../component/admin/UserList'\r\nimport MatchList from '../component/admin/MatchList'\r\nimport '../css/admin.css';\r\n\r\nconst AdminMain = ({allUsers, allGame}) => {\r\n  \r\n  return (\r\n    <div className=\"AdminMain\">\r\n      <Header />\r\n      <div className=\"Content\">\r\n        <CreateUser/>\r\n        <RegiMatch allUsers={allUsers}/>\r\n        <UserList allUsers={allUsers}/>\r\n        <MatchList allGame={allGame}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminMain;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from '../../fbase'\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst Post = () => {\r\n  const [writeMode, setWriteMode] = useState(false);\r\n  const [everyPost, setEveryPost] = useState([])\r\n  const [post, setPost] = useState({\r\n    title: '',\r\n    content: ''\r\n  })\r\n  useEffect(() => {\r\n    dbService.collection(\"post\").limit(10).get().then(snapshot => {\r\n      snapshot.docs.map(doc => {\r\n        const postObject = {\r\n          title: doc.data().title,\r\n          content: doc.data().content,\r\n          writter: doc.data().writter,\r\n          date: doc.data().date,\r\n          recent_fix: doc.data().recent_fix\r\n        }\r\n        setEveryPost(everyPost => [...everyPost, postObject]);\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  const submitReview = ()=>{\r\n    console.log(post.title)\r\n    console.log(post.content)\r\n    console.log(writeMode)\r\n  };\r\n\r\n  const getValue = e => {\r\n    const { name, value } = e.target;\r\n    setPost({\r\n      ...post,\r\n      [name]: value\r\n    })\r\n  };\r\n\r\n  const writeModeBtn = () => {\r\n    setWriteMode(!writeMode)\r\n  }\r\n\r\n  const PostList = everyPost.map(post =>(\r\n    <div className=\"post\">\r\n      <div classNames=\"postTitle\">{post.title}</div>\r\n      <div classNames=\"postDate\">{post.date}</div>\r\n    </div>\r\n  ))\r\n  const postMaker = (\r\n      <div className='postMaker'>\r\n        <input className=\"titleInput\"\r\n          type='text'\r\n          placeholder='제목'\r\n          onChange={getValue}\r\n          name='title'\r\n        />\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data=\"내용을 입력하세용!\"\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setPost({\r\n              ...post,\r\n              content: data\r\n            })\r\n          }}\r\n        />\r\n        <div className=\"buttons\">\r\n          <button className=\"writeModeBtn\" onClick={writeModeBtn}>\r\n            취소\r\n          </button>\r\n          <button className=\"writeModeBtn\" onClick={submitReview}>\r\n            작성\r\n          </button>\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n    return (\r\n        <div className=\"postMain\">\r\n          {writeMode\r\n            ? <>{postMaker}</>\r\n            : <><button className=\"writeModeBtn\" onClick={writeModeBtn}>\r\n                  작성\r\n                </button>\r\n              </>\r\n          }\r\n          {writeMode\r\n            ? <></>\r\n            : <div className=\"postList\">\r\n                {PostList}\r\n              </div>\r\n          }\r\n          \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React, { useEffect, useState } from 'react';\r\nimport '../../css/client.css';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst RankingContent = ({allUsers, allGame, contentMode, setContentMode}) => {\r\n  const studentRanking = allUsers.filter(user => user.status === \"재학\");\r\n  const studentidRanking = allUsers.filter(user => user.studentid === 16);\r\n  const [loadState, setLoadState] = useState({ end: 9 });\r\n  const [showRanking, setShowRanking] = useState([]);\r\n  const [currentType, setCurrentType] = useState('전체');\r\n  const [typeContent, setTypeContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(contentMode === \"재학생랭킹\"){\r\n      setShowRanking(studentRanking.slice(0, loadState.end))\r\n    } else if(contentMode === \"전체랭킹\"){\r\n      // setShowRanking(allUsers)\r\n      switch(currentType) {\r\n        case '전체':\r\n          setShowRanking(allUsers)\r\n          break;\r\n        case '학번':\r\n          if(typeContent) {\r\n            setShowRanking(allUsers.filter(el => el.studentid === parseInt(typeContent)))\r\n          } else{\r\n            setShowRanking(allUsers)\r\n          }\r\n          break;\r\n        default:\r\n          setShowRanking(allUsers)\r\n          break;\r\n      }\r\n    }\r\n  }, [contentMode, allUsers, loadState, currentType, typeContent])\r\n\r\n  // infinite 스크롤\r\n  function onScrollAction(e) {\r\n    const rankingContainer = e.target;\r\n    if(\r\n        rankingContainer.scrollTop + rankingContainer.clientHeight\r\n        >= rankingContainer.scrollHeight\r\n      ) {\r\n        switch(studentRanking.length - loadState.end) {\r\n          case 0:\r\n            break;\r\n          case 1:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 1}))\r\n            break;\r\n          case 2:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 2}))\r\n            break;\r\n          case 3:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 3}))\r\n            break;\r\n          case 4:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 4}))\r\n            break;\r\n          default :\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 5}))\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n  const userRankingList = showRanking.map((user,index) => (\r\n    <div className=\"ranking\" key={index}>\r\n      <p className=\"item--left grade\">{index + 1}</p>\r\n      <div className=\"item--img\">\r\n        {\r\n        user.attachmentUrl ?\r\n        <img src={user.attachmentUrl} alt=\"profile-img\"/> :\r\n        <img src=\"https://d2u3dcdbebyaiu.cloudfront.net/uploads/atch_img/68/d768b6caa2c0d23507bc12087bf171a8.jpeg\" alt=\"profile-img\"/>\r\n        }\r\n      </div>\r\n      <div className=\"item--right\">\r\n        <span className=\"rating\">{user.rating}</span>\r\n        <div>\r\n          <span className=\"studentName\">{user.name}</span>\r\n          <span className=\"studentId\">{user.studentid}</span>\r\n          <span className=\"department\">{user.department}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n\r\n  function onChangeAction(e) {\r\n    setTypeContent(e.target.value)\r\n  }\r\n\r\n  function onClickAction(e) {\r\n    const target = e.target.id;\r\n    setCurrentType(target)\r\n  }\r\n\r\n  const rankingContentFilter = (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <div className=\"dropdown--selected\">\r\n          <span className=\"selected\">{currentType}</span>\r\n          <FontAwesomeIcon icon={faCaretDown}/>\r\n        </div>\r\n        <ul className=\"dropdown--list\">\r\n          <li id=\"전체\" className=\"dropdown--list__item\" onClick={onClickAction}>전체</li>\r\n          <li id=\"학번\" className=\"dropdown--list__item\" onClick={onClickAction}>학번</li>\r\n        </ul>\r\n      </div>\r\n      <input type=\"text\" className=\"rankingContent-input\" placeholder=\"text me...\" onChange={onChangeAction} />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {contentMode === \"전체랭킹\" && rankingContentFilter}\r\n      <div className=\"rankingContainer\" onScroll={onScrollAction}>\r\n        {userRankingList}\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default RankingContent;","import React from 'react';\r\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst RecentGame = ({ allGame }) => {\r\n\r\n    const recentGames =  allGame.slice(0, 5).map((el, index) => (\r\n        <div className=\"game\" key={index}>\r\n            <div className=\"top\">{el.date.slice(0, 4)}년 {el.date.slice(4, 6)}월 {el.date.slice(6)}일</div>\r\n            <div className=\"bot\">\r\n                {el.winners.length === 2 ?\r\n                    <>\r\n                    <div className=\"winner\">\r\n                        <span>Winner! ^^</span>\r\n                        <div className=\"winnerInfo\">\r\n                            <div className=\"winnerNames\">\r\n                                <span className=\"winner__name\">{el.winners[0]}</span>\r\n                                <span className=\"winner__name\">{el.winners[1]}</span>\r\n                            </div>\r\n                            <div className=\"winnerRatings\">\r\n                                <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                                <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"loser\">\r\n                        <span>loser! ㅠㅠ</span>\r\n                        <div className=\"loserInfo\">\r\n                            <div className=\"loserNames\">\r\n                                <span className=\"loser__name\">{el.losers[0]}</span>\r\n                                <span className=\"loser__name\">{el.losers[1]}</span>\r\n                            </div>\r\n                            <div className=\"loserRatings\">\r\n                                <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                                <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </>\r\n                :\r\n                    <>\r\n                    <div className=\"winner\">\r\n                        <span>Winner! ^^</span>\r\n                        <div className=\"winnerInfo\">\r\n                            <div className=\"winnerNames\">\r\n                                <span className=\"winner__name\">{el.winners[0]}</span>\r\n                            </div>\r\n                            <div className=\"winnerRatings\">\r\n                                <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"loser\">\r\n                        <span>loser! ㅠㅠ</span>\r\n                        <div className=\"loserInfo\">\r\n                            <div className=\"loserNames\">\r\n                                <span className=\"loser__name\">{el.losers[0]}</span>\r\n                            </div>\r\n                            <div className=\"loserRatings\">\r\n                                <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n        ))\r\n\r\n    return (\r\n        <div className=\"games\">\r\n            {recentGames}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecentGame","import React from 'react';\r\n\r\nconst UserInfo = ({allUsers, allGame, contentMode}) => {\r\n  \r\n  const allUsersByTime = [...allUsers];\r\n  allUsersByTime.sort(function(a,b){\r\n    return a.time > b.time ? -1 : a.time < b.time ? 1: 0;\r\n  })\r\n\r\n    const userInfo = allUsersByTime.map((user,index) => (\r\n        <div className=\"userInfo\" key={index}>\r\n          <div className=\"userProfile\">\r\n            <img className=\"userImage\" src={user.attachmentUrl}/>\r\n          </div>\r\n          <div className=\"userInfoRightSide\">\r\n            <div className=\"userInfoUpSide\">\r\n              <div>\r\n                <span className=\"studentName\">{user.name}</span>\r\n                <span> . . . </span>\r\n                <span className=\"userStatus\">{user.status}</span>\r\n              </div>\r\n              <div className=\"win_lose\">\r\n                <div className=\"department\">{user.game_win}승</div>\r\n                <div className=\"department\">{user.game_lose}패</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"userInfoBottomSide\">\r\n              <span className=\"rating\">레이팅: {user.rating}</span>\r\n              <span className=\"studentId\">{user.studentId}</span>\r\n              <span className=\"department\">{user.department}</span>\r\n              {/* <span className=\"department\">승률: {Math.round(((user.game_win)/(user.game_all))*100)}%</span> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n    ))\r\n    return (\r\n        <div className=\"usersInformation\">\r\n          {userInfo}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UserInfo;","import React, { useEffect, useState } from 'react';\r\nimport Post from '../component/client/Post';\r\nimport RankingContent from '../component/client/RankingContent';\r\nimport RecentGame from '../component/client/RecentGame';\r\nimport UserInfo from '../component/client/UserInfo';\r\nimport '../css/client.css';\r\nimport '../css/client_mugil.css';\r\n\r\nconst ClientMain = ({userObj, allUsers, allGame}) => {\r\n  const [contentMode, setContentMode] = useState(\"재학생랭킹\");\r\n\r\n  const listOnClicked = e => {\r\n    e.preventDefault();\r\n    setContentMode(e.target.id)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"client-container\">\r\n        <div className=\"nav\">\r\n              <ul>\r\n                <li id=\"재학생랭킹\" onClick={listOnClicked}>재학생 랭킹</li>\r\n                <li id=\"전체랭킹\" onClick={listOnClicked}>전체 랭킹</li>\r\n                <li id=\"선수상세정보\" onClick={listOnClicked}>선수 상세정보</li>\r\n                <li id=\"게시글\" onClick={listOnClicked}>게시글</li>\r\n              </ul>\r\n              {/* 로그인 기능 추가 시 */}\r\n              {/* {userObj &&\r\n                  <div className=\"signedUser\">\r\n                  <img className=\"signedUser--img\" src={userObj.photoURL} alt=\"\"></img>\r\n                  <div className=\"signedUser--txt\">\r\n                      <p className=\"signedUser__name\">{userObj.displayName}</p>\r\n                      <p className=\"signedUser__email\">{userObj.email}</p>\r\n                  </div>\r\n                  </div>\r\n              } */}\r\n              <footer>\r\n                  <p className=\"footer--top\">&copy; 2021, Built by</p>\r\n                  <p className=\"footer--bot\">gilmujjang & Hyeon-Gwang</p>\r\n              </footer>\r\n          </div>\r\n        <div className=\"ClientMain\">\r\n          {[\"재학생랭킹\",\"전체랭킹\"].includes(contentMode) && <RankingContent allGame={allGame} allUsers={allUsers} contentMode={contentMode} setContentMode={setContentMode}/>}\r\n          {contentMode===\"선수상세정보\" && <UserInfo allUsers={allUsers}/>}\r\n          {contentMode===\"게시글\" && <Post/>}\r\n        </div>\r\n        {\r\n        !['선수상세정보', '게시글'].includes(contentMode) &&\r\n        <div className=\"aside\">\r\n          <div className=\"aside1\">\r\n            <RecentGame allGame={allGame}/>\r\n          </div>\r\n          <div className=\"aside2\">\r\n            <h2>aside2</h2>\r\n          </div>\r\n        </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientMain;\r\n","import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from '../router/Auth';\r\nimport AdminMain from '../router/AdminMain';\r\nimport ClientMain from '../router/ClientMain';\r\nimport {React, useEffect, useState } from 'react';\r\nimport { dbService } from '../fbase'\r\n\r\n\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [allGame, setAllGame] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"user\").orderBy(\"rating\",\"desc\").get().then(snapshot => {\r\n      snapshot.docs.map(doc => {\r\n        const userObject = {\r\n          name:doc.data().name,\r\n          rating:doc.data().rating,\r\n          game_all:doc.data().game_all,\r\n          game_win:doc.data().game_win,\r\n          game_lose:doc.data().game_lose,\r\n          studentid:doc.data().studentid,\r\n          department:doc.data().department,\r\n          status: doc.data().status,\r\n          time:doc.data().time,\r\n          attachmentUrl:doc.data().attachmentUrl\r\n        }\r\n        setAllUsers(allUsers => [...allUsers, userObject]);\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"game\").orderBy(\"write_time\",\"desc\").limit(10).get().then(snapshot => {\r\n      snapshot.docs.map(doc => {\r\n        const gameObject = {\r\n          winners:doc.data().winners,\r\n          losers:doc.data().losers,\r\n          ratingChange:doc.data().ratingChange,\r\n          percentage:doc.data().percentage,\r\n          date:doc.data().date,\r\n          time:doc.data().write_time,\r\n          id:doc.data().date+'-'+doc.data().write_time\r\n        }\r\n        setAllGame(allGame => [...allGame, gameObject]);\r\n      })\r\n    })\r\n  }, [])\r\n  return(\r\n    <Router>\r\n      <Route exact path = \"/\">\r\n        <ClientMain allUsers={allUsers} allGame={allGame}/>\r\n      </Route>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n        <Route path=\"/admin\">\r\n          <AdminMain userObj={userObj}  allUsers={allUsers} allGame={allGame}/>\r\n        </Route>\r\n         ) : (\r\n          <Route exact path = \"/admin\">\r\n            <Auth/>\r\n          </Route>\r\n         )}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default AppRouter;","import './style.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport AppRouter from \"./component/Router\";\r\nimport { authService } from \"./fbase\";\r\n\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, [])\r\n\r\n  const user = authService.currentUser;\r\n  if(user==null){\r\n    authService.signInAnonymously()\r\n      .then(() => {\r\n        setInit(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.code)\r\n        console.log(error.message)\r\n      })\r\n  }\r\n\r\n  const refreshUser = () => {\r\n    setUserObj(authService.currentUser);\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter \r\n          refreshUser = {refreshUser}\r\n          isLoggedIn={Boolean(userObj)} \r\n          userObj={userObj}\r\n        />\r\n        ):(\r\n          \"Initailizing...\")}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}