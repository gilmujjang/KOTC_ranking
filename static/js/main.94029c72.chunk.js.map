{"version":3,"sources":["fbase.js","router/Auth.js","component/admin/Header.js","component/admin/CreateUser.js","component/admin/RegiMatch.js","component/admin/UserList.js","component/admin/MatchList.js","router/AdminMain.js","component/client/Post.js","component/client/RankingContent.js","component/client/RecentGame.js","component/client/UserInfo.js","router/ClientMain.js","component/Router.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","error","setError","history","useHistory","onSocialClick","event","a","target","name","provider","GoogleAuthProvider","signInWithPopup","onChange","value","onSubmit","preventDefault","signOut","signInWithEmailAndPassword","message","push","className","icon","faGoogle","color","size","style","marginBottom","type","placeholder","required","onClick","Header","class","CreateUser","studentid","department","start_rating","rating","status","inputs","setInputs","attachment","setAttachment","handleChange","e","userMakeSubmit","alert","attachmentUrl","attachmentRef","ref","child","putString","response","getDownloadURL","now","Date","year","getFullYear","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","time","userProfile","parseInt","game_all","game_win","game_lose","collection","doc","set","userMaker","Form","Input","id","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","src","alt","Button","RegiMatch","allUsers","increment","FieldValue","searchWinner","setSearchWinner","winnersRating","setWinnersRating","searchLoser","setSearchLoser","losersRating","setLosersRating","gameUser","setGameUser","winners","setWinners","losers","setLosers","startDate","setStartDate","allUserList","setAllUserList","useEffect","map","user","winnerChange","key","length","includes","concat","where","get","then","snapshot","forEach","data","Number","isInteger","loserChange","matchSubmit","winnerAverageRating","loserAverageRating","Math","max","min","percentage","pow","toFixed","reversePercentage","RatingChange","round","matchDate","winnerRatingAfter","winner","loserRatingAfter","loser","match","winnerRatingBefore","loserRatingBefore","ratingChange","write_time","NaN","update","shift","regiMatch","onKeyPress","i","selected","UserList","RecentUser","Toast","ToastHeader","MatchList","allGame","deleteClick","winTeam","loseTeam","changedRating","game","delete","RecentGame","AdminMain","Post","userObj","writeMode","setWriteMode","refresh","setRefresh","everyPost","setEveryPost","content","setContent","console","log","orderBy","limit","docs","postObject","writer","recent_fix","submitReview","displayName","writeModeBtn","PostList","post","classNames","slice","ReactHtmlParser","postMaker","editor","ClassicEditor","getData","postMakeBtn","needLoginBtn","RankingContent","contentMode","studentRanking","setContentMode","filter","end","loadState","setLoadState","showRanking","setShowRanking","currentType","setCurrentType","typeContent","setTypeContent","el","userRankingList","index","onClickAction","rankingContentFilter","faCaretDown","onScroll","rankingContainer","scrollTop","clientHeight","scrollHeight","prevLoadState","recentGames","faCaretUp","UserInfo","allUsersByTime","sort","b","userInfo","studentId","margin","top","right","bottom","left","xScale","yScale","stacked","reverse","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","enableGridX","lineWidth","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","isInteractive","enableCrosshair","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","ClientMain","listOnClicked","AppRouter","setAllUsers","setAllGame","userObject","gameObject","exact","path","App","currentUser","init","setInit","setUserObj","onAuthStateChanged","uid","updateProfile","args","signInAnonymously","catch","code","refreshUser","isLoggedIn","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94029c72.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_ODOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService,firebaseInstance } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onSocialClick = async(event) => {\r\n    const {target:{name},\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event;\r\n    if(name === \"email\"){\r\n      setEmail(value)\r\n    } else if (name === \"password\") {\r\n      setPassword(value)\r\n    }\r\n  };\r\n  const onSubmit = async(event) => {\r\n    event.preventDefault();\r\n    await authService.signOut();\r\n    try {\r\n      let data;\r\n        data = await authService.signInWithEmailAndPassword(email, password)\r\n  \r\n    } catch(error){\r\n      setError(error.message);\r\n    }\r\n    history.push(\"/\")\r\n  };\r\n\r\n  return(\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faGoogle}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <div> 구글 로그인만 가능 밑에 Continue with Google 클릭하셈</div>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n        name = \"email\" \r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        required \r\n        value={email}\r\n        onChange={onChange}\r\n        className=\"authInput\"/>\r\n\r\n        <input \r\n        name = \"password\" \r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        required \r\n        value={password}\r\n        onChange={onChange}\r\n        className=\"authInput\"/>\r\n\r\n        <input \r\n          className=\"authInput authSubmit\"\r\n          type=\"submit\" \r\n          value=\"Log In\">\r\n        </input>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { authService } from \"../../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\")\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"headerText\">KOTC 랭킹시스템 관리자 페이지</span>\r\n      <i class=\"fas fa-sign-out-alt fa-2x logout needMargin\"  onClick={onLogOutClick}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { React, useState } from 'react';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { dbService, storageService } from '../../fbase';\r\n\r\nconst CreateUser = () => {\r\n  const [inputs, setInputs] = useState({\r\n    name: '',\r\n    studentid:'',\r\n    department:'',\r\n    start_rating:'',\r\n    rating:'',\r\n    status:'재학'\r\n  });\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n\r\n  const { name, studentid, department, start_rating, status} = inputs;\r\n\r\n  const handleChange = (e) => {\r\n    const {value, name} = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const userMakeSubmit = async(e) => {\r\n    e.preventDefault();\r\n    if(name === ''){\r\n      alert(\"이름을 입력하세요\")\r\n      return;\r\n    }\r\n    if(studentid === ''){\r\n      alert(\"학번을 입력하세요\")\r\n      return;\r\n    }\r\n    if(department === ''){\r\n      alert(\"학과를 입력하세요\")\r\n      return;\r\n    }\r\n    if(start_rating === ''){\r\n      alert(\"초기 레이팅을 입력하세요\")\r\n      return;\r\n    }\r\n    if(status === ''){\r\n      alert(\"재학상태를 입력하세요\")\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\"){\r\n      const attachmentRef = storageService.ref().child(name);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    \r\n    let now = new Date();   \r\n    let year = now.getFullYear(); // 년도\r\n    let month = now.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    let date = now.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    let hours = now.getHours(); // 시\r\n    if(hours<10){\r\n      hours = 0+''+hours\r\n    }\r\n    let minutes = now.getMinutes();  // 분\r\n    if(minutes<10){\r\n      minutes = 0+''+minutes\r\n    }\r\n    let seconds = now.getSeconds();  // 초\r\n    if(seconds<10){\r\n      seconds = 0+''+seconds\r\n    }\r\n    const time = (year + '' + month + '' + date + '' + hours + '' + minutes + '' + seconds)\r\n\r\n    const userProfile = {\r\n      name: name,\r\n      studentid: parseInt(studentid),\r\n      department: department,\r\n      start_rating: parseInt(start_rating),\r\n      rating: parseInt(start_rating),\r\n      status: status,\r\n      time:time,\r\n      attachmentUrl,\r\n      game_all:0,\r\n      game_win:0,\r\n      game_lose:0,\r\n    }\r\n    await dbService.collection(\"user\").doc(name).set(userProfile);\r\n\r\n    setAttachment(\"\");\r\n    setInputs({\r\n      name: '',\r\n      studentid:'',\r\n      department:'',\r\n      start_rating:'',\r\n      rating:'',\r\n      status:'재학'\r\n    })\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  const onFileChange = (event) => {\r\n    const {target:{files},\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: {result},\r\n      } = finishedEvent;\r\n      setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  //위에는 함수 밑에는 jsx\r\n  \r\n  const userMaker = (\r\n    <div className='userMaker'>\r\n      <Form className=\"noteWriter\">\r\n        <div className=\"userProfileImage\">\r\n          <span>프사</span>\r\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" onChange={onFileChange}/>\r\n        </div>\r\n        {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img className=\"profileImg\" src={attachment} alt=\"profile image\"/>\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n        <div className=\"needMargin\">\r\n          <span>이름</span>\r\n          <Input type=\"text\" name='name' onChange={handleChange} value={name}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>학번</span>\r\n          <Input type=\"text\" name='studentid' onChange={handleChange} value={studentid}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>학과</span>\r\n          <Input type=\"text\" name='department' onChange={handleChange} value={department}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>초기레이팅</span>\r\n          <Input type=\"text\" name='start_rating' onChange={handleChange} value={start_rating}/>\r\n        </div>\r\n        <div className=\"needMargin\">\r\n          <span>상태</span>\r\n          <Input type=\"select\" name='status' onChange={handleChange} value={status}>\r\n            <option>재학</option>\r\n            <option>졸업</option>\r\n          </Input>\r\n        </div>\r\n        <Button className=\"needMargin\" onClick={userMakeSubmit}>전송</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"ShortBox\">\r\n      {userMaker}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.min.css'\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { dbService } from '../../fbase';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst RegiMatch = ({allUsers}) => {\r\n  const increment = firebase.firestore.FieldValue.increment(1);\r\n  const [searchWinner,setSearchWinner] = useState(\"\");\r\n  const [winnersRating, setWinnersRating] = useState([]);\r\n  const [searchLoser,setSearchLoser] = useState(\"\");\r\n  const [losersRating, setLosersRating] = useState([]);\r\n  const [gameUser, setGameUser] = useState(\"\");\r\n  const [winners, setWinners] = useState([]);\r\n  const [losers, setLosers] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [allUserList, setAllUserList] = useState([])\r\n\r\n  useEffect(() => {\r\n    allUsers.map(user => {\r\n      setAllUserList(allUserList => [...allUserList, user.name])\r\n    })\r\n  }, [allUsers])\r\n\r\n  const stateInit = () => {\r\n    setSearchWinner('');\r\n    setSearchLoser('');\r\n    setWinners([]);\r\n    setLosers([]);\r\n    setGameUser([]);\r\n    setWinnersRating([]);\r\n    setLosersRating([]);\r\n  }\r\n\r\n  const winnerChange = e => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      if(winners.length>=2){\r\n        alert('2명이하만')\r\n        setSearchWinner('');\r\n        return;\r\n      } else {  //2명 이하이고\r\n        if(allUserList.includes(searchWinner)){  //유저목록에 있으면\r\n          if(gameUser.includes(searchWinner)){  //이면서 들어가있으면 안됨\r\n            alert(\"이미 등록된 유저입니다\")\r\n            setSearchWinner('');\r\n            return;\r\n          } else {\r\n            setWinners(winners.concat(searchWinner))\r\n            setGameUser(gameUser.concat(searchWinner))\r\n            dbService.collection(\"user\").where(\"name\",\"==\",searchWinner).get().then((snapshot) => {\r\n              snapshot.forEach((doc) => {\r\n                setWinnersRating(winnersRating.concat(doc.data().rating));\r\n              })\r\n            })\r\n            setSearchWinner('');  \r\n          }  \r\n            \r\n        } else if(Number.isInteger(parseInt(searchWinner))){\r\n          setWinners(winners.concat(searchWinner))\r\n          setSearchWinner('');\r\n          setWinnersRating(winnersRating.concat(Number(searchWinner)));  \r\n\r\n        } else { //등록된 유저가 아니면\r\n          alert('등록된 유저가 아닙니다')\r\n          setSearchWinner('');\r\n        }\r\n      }\r\n    } else { \r\n      setSearchWinner(e.target.value);\r\n    }\r\n  };\r\n\r\n  const loserChange = e => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      if(losers.length>=2){\r\n        alert('2명이하만')\r\n        setSearchLoser('');\r\n        return;\r\n      } else {  //2명 이하이고\r\n        if(allUserList.includes(searchLoser)){  //유저목록에 있으면\r\n          if(gameUser.includes(searchLoser)){\r\n            alert(\"이미 등록된 유저입니다\")\r\n            setSearchLoser('');\r\n            return;\r\n          } else {\r\n            setGameUser(gameUser.concat(searchLoser))\r\n            setLosers(losers.concat(searchLoser))\r\n            dbService.collection(\"user\").where(\"name\",\"==\",searchLoser).get().then((snapshot) => {\r\n              snapshot.forEach((doc) => {\r\n                setLosersRating(losersRating.concat(doc.data().rating));\r\n              })\r\n            })\r\n            setSearchLoser('');\r\n          }\r\n\r\n        } else if(Number.isInteger(parseInt(searchLoser))){\r\n          setLosers(losers.concat(searchLoser))\r\n          setSearchLoser('');\r\n          setLosersRating(losersRating.concat(Number(searchLoser)));\r\n        } else { //등록된 유저가 아니면\r\n          alert('등록된 유저가 아닙니다')\r\n          setSearchLoser('');\r\n        }\r\n      }\r\n    } else { \r\n      setSearchLoser(e.target.value);\r\n    }\r\n  };\r\n\r\n  const matchSubmit = async(e) => {\r\n    e.preventDefault();\r\n    let winnerAverageRating = winnersRating[0];\r\n    let loserAverageRating = losersRating[0];\r\n    if(winnersRating.length==2){\r\n      winnerAverageRating = (Math.max(winnersRating[0],winnersRating[1])+2*Math.min(winnersRating[0],winnersRating[1]))/3\r\n    }\r\n    if(losersRating.length==2){\r\n      loserAverageRating = (Math.max(losersRating[0],losersRating[1])+2*Math.min(losersRating[0],losersRating[1]))/3\r\n    }\r\n    const percentage = (1/(1+(Math.pow(10,(loserAverageRating-winnerAverageRating)/400)))).toFixed(2)\r\n    const reversePercentage = (1-percentage).toFixed(2)\r\n    const RatingChange = Math.round(reversePercentage*32)\r\n    if(winners.length===0){\r\n      alert('승자를 입력하세요');\r\n      return;\r\n    }\r\n    if(losers.length===0){\r\n      alert('패자를 입력하세요');\r\n      return;\r\n    }\r\n    if(winners.length !== losers.length){\r\n      alert(\"인원을 맞추시오\");\r\n      return;\r\n    }\r\n\r\n    let now = new Date();   \r\n    let year = now.getFullYear(); // 년도\r\n    let month = now.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    let date = now.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    let hours = now.getHours(); // 시\r\n    if(hours<10){\r\n      hours = 0+''+hours\r\n    }\r\n    let minutes = now.getMinutes();  // 분\r\n    if(minutes<10){\r\n      minutes = 0+''+minutes\r\n    }\r\n    let seconds = now.getSeconds();  // 초\r\n    if(seconds<10){\r\n      seconds = 0+''+seconds\r\n    }\r\n    const time = (year + '' + month + '' + date + '' + hours + '' + minutes + '' + seconds)\r\n\r\n    year = startDate.getFullYear(); // 년도\r\n    month = startDate.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    date = startDate.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    const matchDate = (year + '' + month + '' + date)\r\n\r\n    let winnerRatingAfter = winnersRating.map(winner => winner + RatingChange)\r\n    let loserRatingAfter = losersRating.map(loser => loser - RatingChange)\r\n\r\n    const match = {\r\n      winners: winners,\r\n      winnerRatingBefore: winnersRating,\r\n      winnerRatingAfter: winnerRatingAfter,\r\n      losers: losers,\r\n      loserRatingBefore: losersRating,\r\n      loserRatingAfter: loserRatingAfter,\r\n      percentage: Math.round(percentage*100),\r\n      ratingChange: RatingChange,\r\n      date: matchDate,\r\n      write_time: time\r\n    }\r\n\r\n    if(percentage==NaN){\r\n      alert(\"percentage is never NaN\");\r\n      return;\r\n    }\r\n\r\n    await dbService.collection(\"game\").doc(matchDate+'-'+time).set(match);\r\n    \r\n    await winners.map(winner => {\r\n      dbService.collection(\"user\").doc(winner).collection(\"game_record\").doc(matchDate+'-'+time).set(match)\r\n      dbService.collection(\"user\").doc(winner).update({\r\n        rating: winnersRating.shift() + RatingChange,\r\n        game_all: increment,\r\n        game_win: increment\r\n      })\r\n    })\r\n    await losers.map(loser => {\r\n      dbService.collection(\"user\").doc(loser).collection(\"game_record\").doc(matchDate+'-'+time).set(match)\r\n      dbService.collection(\"user\").doc(loser).update({\r\n        rating: losersRating.shift() - RatingChange,\r\n        game_all: increment,\r\n        game_lose: increment\r\n      })\r\n    })\r\n    stateInit();\r\n  }\r\n\r\n\r\n  const regiMatch = (\r\n    <div className='userMaker'>\r\n      <Form className=\"noteWriter\">\r\n        <div className=\"matchResult\">\r\n          <span>\r\n            <div>승</div>\r\n            <Input type=\"text\" name='win' value={searchWinner} onChange={winnerChange} onKeyPress={winnerChange}/>\r\n            <div className=\"users playerView\">\r\n              {winners.map(i => (\r\n                <span className=\"targetUser\">{i}</span>\r\n              ))}\r\n            </div>\r\n          </span>\r\n          <span className=\"versus\"> VS </span>\r\n          <span>\r\n            <div>패</div>\r\n            <Input type=\"text\" name='lose' value={searchLoser} onChange={loserChange} onKeyPress={loserChange}/>\r\n            <div className=\"users\">\r\n              <div className=\"flexWrap\">\r\n                {losers.map(i => (\r\n                  <span className=\"targetUser\">{i}</span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div className=\"datepicker\">\r\n          <span className=\"needMargin\">시합일</span>\r\n          <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n        </div>\r\n        <Button className=\"needMargin\" onClick={matchSubmit}>전송</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"ShortBox\">\r\n      {regiMatch}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegiMatch;\r\n","import { React } from 'react';\r\nimport { Toast, ToastHeader } from 'reactstrap';\r\n\r\nconst UserList = ({allUsers}) => {\r\n\r\n  const RecentUser = allUsers.map(user => (\r\n    <Toast>\r\n      <ToastHeader>\r\n        <div className=\"spaceBetween\">\r\n          <div>{user.name}__</div>\r\n          <div>{user.status}</div>\r\n        </div>\r\n      </ToastHeader>\r\n      <div className=\"needMargin spaceBetween\">\r\n        <div>학번 : {user.studentid}</div>\r\n        <div>학과 : {user.department}</div>\r\n      </div>\r\n      <div className=\"needMargin spaceBetween\">\r\n        <div>Rating : {user.rating}</div>\r\n        <div>전적 : {user.game_win}승 {user.game_lose}패</div>\r\n      </div>\r\n    </Toast>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"LongBox\">\r\n      {RecentUser}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { React, useEffect, useState } from 'react';\r\nimport { Toast, ToastHeader } from 'reactstrap';\r\nimport { dbService } from '../../fbase';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst MatchList = ({allGame}) => {\r\n\r\n  const deleteClick = async(e) => {\r\n    let winTeam = []\r\n    let loseTeam = []\r\n    let changedRating = 0\r\n    allGame.map(game => {\r\n      if(game.id == e.target.id){\r\n        winTeam=winTeam.concat(game.winners)\r\n        loseTeam=loseTeam.concat(game.losers)\r\n        changedRating =game.ratingChange\r\n      }\r\n    })\r\n\r\n    await winTeam.map(winner => {\r\n      dbService.collection(\"user\").doc(winner).collection(\"game_record\").doc(e.target.id).delete()\r\n      dbService.collection(\"user\").doc(winner).update({\r\n        rating:firebase.firestore.FieldValue.increment(-changedRating),\r\n        game_all:firebase.firestore.FieldValue.increment(-1),\r\n        game_win:firebase.firestore.FieldValue.increment(-1)\r\n      })\r\n    })\r\n\r\n    await loseTeam.map(loser => {\r\n      dbService.collection(\"user\").doc(loser).collection(\"game_record\").doc(e.target.id).delete()\r\n      dbService.collection(\"user\").doc(loser).update({\r\n        rating:firebase.firestore.FieldValue.increment(changedRating),\r\n        game_all:firebase.firestore.FieldValue.increment(-1),\r\n        game_lose:firebase.firestore.FieldValue.increment(-1)\r\n      })\r\n    })\r\n    await dbService.collection(\"game\").doc(e.target.id).delete()\r\n    alert(e.target.id+' 를 삭제했습니다')\r\n  }\r\n\r\n  const RecentGame = allGame.map(game => (\r\n    <div className=\"displayFlex\">\r\n      <Toast>\r\n        <ToastHeader>\r\n          {game.winners.map(i => (\r\n          <span className=\"targetUser\">{i}</span>\r\n          ))}\r\n          vs \r\n          {game.losers.map(i => (\r\n          <span className=\"targetUser\">{i}</span>\r\n          ))}\r\n        </ToastHeader>\r\n        <div className=\"needMargin flexWrap spaceBetween\">\r\n          <div>레이팅변화 : {game.ratingChange}</div>\r\n          <div>승률예측 : {game.percentage}%</div>\r\n        </div>\r\n        <div className=\"needMargin flexWrap spaceBetween\">\r\n          등록시각 : {game.time}\r\n        </div>\r\n      </Toast>\r\n      <i class=\"far fa-trash-alt deleteIcon\" id={game.date+'-'+game.time} onClick={deleteClick}></i>\r\n    </div>\r\n  ))\r\n \r\n  return (\r\n    <div className=\"LongBox\">\r\n      <div className=\"gameListHeader\">\r\n        <span>승리팀</span>\r\n        <span>패배팀</span>\r\n      </div>\r\n      <div>{RecentGame}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchList;\r\n","import { React, useEffect, useState } from 'react';\r\nimport { dbService } from '../fbase';\r\nimport Header from '../component/admin/Header';\r\nimport CreateUser from '../component/admin/CreateUser'\r\nimport RegiMatch from '../component/admin/RegiMatch'\r\nimport UserList from '../component/admin/UserList'\r\nimport MatchList from '../component/admin/MatchList'\r\nimport '../css/admin.css';\r\n\r\nconst AdminMain = ({allUsers, allGame}) => {\r\n  \r\n  return (\r\n    <div className=\"AdminMain\">\r\n      <Header />\r\n      <div className=\"Content\">\r\n        <CreateUser/>\r\n        <RegiMatch allUsers={allUsers}/>\r\n        <UserList allUsers={allUsers}/>\r\n        <MatchList allGame={allGame}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminMain;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { dbService,authService,firebaseInstance } from '../../fbase'\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport ReactHtmlParser from 'react-html-parser'\r\n\r\nconst Post = ({userObj}) => {\r\n  const [writeMode, setWriteMode] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [everyPost, setEveryPost] = useState([])\r\n  const [content, setContent] = useState('')\r\n  useEffect(() => {\r\n    setEveryPost([])\r\n    console.log(\"useEffect 실행\")\r\n    dbService.collection(\"post\").orderBy(\"date\",\"desc\").limit(30).get().then(snapshot => {\r\n      snapshot.docs.map(doc => {\r\n        const postObject = {\r\n          content: doc.data().content,\r\n          writer: doc.data().writer,\r\n          date: doc.data().date,\r\n          recent_fix: doc.data().recent_fix\r\n        }\r\n        setEveryPost(everyPost => [...everyPost, postObject]);\r\n      })\r\n    })\r\n  }, [refresh])\r\n\r\n  const onSocialClick = async(event) => {\r\n    const {target:{name},\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  const submitReview = async(e) =>{\r\n    e.preventDefault();\r\n    if(content === ''){\r\n      alert(\"내용을 입력하세요\")\r\n      return;\r\n    }\r\n    let now = new Date();   \r\n    let year = now.getFullYear(); // 년도\r\n    let month = now.getMonth() + 1;  // 월\r\n    if(month<10){\r\n      month = 0+''+month\r\n    }\r\n    let date = now.getDate();  // 날짜\r\n    if(date<10){\r\n      date = 0+''+date\r\n    }\r\n    let hours = now.getHours(); // 시\r\n    if(hours<10){\r\n      hours = 0+''+hours\r\n    }\r\n    let minutes = now.getMinutes();  // 분\r\n    if(minutes<10){\r\n      minutes = 0+''+minutes\r\n    }\r\n    let seconds = now.getSeconds();  // 초\r\n    if(seconds<10){\r\n      seconds = 0+''+seconds\r\n    }\r\n    const time = (year + '' + month + '' + date + '' + hours + '' + minutes + '' + seconds)\r\n\r\n    const postObject = {\r\n      date: time,\r\n      recent_fix: time,\r\n      content: content,\r\n      writer: userObj.displayName,\r\n    }\r\n    await dbService.collection(\"post\").doc(time).set(postObject);\r\n    setContent('')\r\n    setWriteMode(!writeMode)\r\n    setRefresh(!refresh)\r\n  };\r\n\r\n  const writeModeBtn = () => {\r\n    setWriteMode(!writeMode)\r\n  }\r\n\r\n  const PostList = everyPost.map(post =>(\r\n    <div className=\"post\">\r\n      <div className=\"postHeader\">\r\n        <div classNames=\"userName\">{post.writer}</div>\r\n        <div classNames=\"postDate\">{post.date.slice(0,4)}년 {post.date.slice(4, 6)}월 {post.date.slice(6,8)}일</div>\r\n      </div>\r\n      <div className=\"postContent\">\r\n        {ReactHtmlParser(post.content)}\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n  const postMaker = (\r\n      <div className={writeMode ? 'postMaker active' : 'postMaker'}>\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data=\"내용을 입력하세용!\"\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setContent(data)\r\n          }}\r\n        />\r\n        <div className=\"buttons\">\r\n          <button className=\"writeModeBtn\" onClick={writeModeBtn}>\r\n            취소\r\n          </button>\r\n          <button className=\"writeModeBtn\" onClick={submitReview}>\r\n            작성\r\n          </button>\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n  const postMakeBtn = (\r\n    <div className=\"postMakeBtn\">\r\n      <div>{userObj.displayName} 님 안녕하세요!</div>\r\n      <button className=\"writeModeBtn\" onClick={writeModeBtn}>\r\n        작성\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n  const needLoginBtn = (\r\n    <button onClick={onSocialClick} name=\"google\" className=\"writeModeBtn\">\r\n      구글 로그인\r\n    </button>\r\n  )\r\n\r\n  return (\r\n    <postMakeBtn>\r\n      <div className=\"postMain\">\r\n        {postMaker}\r\n        <div className={writeMode ? 'postList active' : 'postList'}>\r\n          {userObj.displayName\r\n            ? <>{postMakeBtn}</>\r\n            : <>{needLoginBtn}</>\r\n          }\r\n          {PostList}\r\n        </div>\r\n      </div>\r\n    </postMakeBtn>\r\n  )\r\n};\r\n\r\nexport default Post;","import React, { useEffect, useState } from 'react';\r\nimport '../../css/client.css';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst RankingContent = ({allUsers, allGame, contentMode, setContentMode}) => {\r\n  const studentRanking = allUsers.filter(user => user.status === \"재학\");\r\n  const studentidRanking = allUsers.filter(user => user.studentid === 16);\r\n  const [loadState, setLoadState] = useState({ end: 9 });\r\n  const [showRanking, setShowRanking] = useState([]);\r\n  const [currentType, setCurrentType] = useState('전체');\r\n  const [typeContent, setTypeContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(contentMode === \"재학생랭킹\"){\r\n      setShowRanking(studentRanking.slice(0, loadState.end))\r\n    } else if(contentMode === \"전체랭킹\"){\r\n      // setShowRanking(allUsers)\r\n      switch(currentType) {\r\n        case '전체':\r\n          setShowRanking(allUsers)\r\n          break;\r\n        case '학번':\r\n          if(typeContent) {\r\n            setShowRanking(allUsers.filter(el => el.studentid === parseInt(typeContent)))\r\n          } else{\r\n            setShowRanking(allUsers)\r\n          }\r\n          break;\r\n        default:\r\n          setShowRanking(allUsers)\r\n          break;\r\n      }\r\n    }\r\n  }, [contentMode, allUsers, loadState, currentType, typeContent])\r\n\r\n  // infinite 스크롤\r\n  function onScrollAction(e) {\r\n    const rankingContainer = e.target;\r\n    if(\r\n        rankingContainer.scrollTop + rankingContainer.clientHeight\r\n        >= rankingContainer.scrollHeight\r\n      ) {\r\n        switch(studentRanking.length - loadState.end) {\r\n          case 0:\r\n            break;\r\n          case 1:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 1}))\r\n            break;\r\n          case 2:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 2}))\r\n            break;\r\n          case 3:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 3}))\r\n            break;\r\n          case 4:\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 4}))\r\n            break;\r\n          default :\r\n            setLoadState(prevLoadState => ({...prevLoadState, end: prevLoadState.end + 5}))\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n  const userRankingList = showRanking.map((user,index) => (\r\n    <div className=\"ranking\" key={index}>\r\n      <p className=\"item--left grade\">{index + 1}</p>\r\n      <div className=\"item--img\">\r\n        {\r\n        user.attachmentUrl ?\r\n        <img src={user.attachmentUrl} alt=\"profile-img\"/> :\r\n        <img src=\"https://d2u3dcdbebyaiu.cloudfront.net/uploads/atch_img/68/d768b6caa2c0d23507bc12087bf171a8.jpeg\" alt=\"profile-img\"/>\r\n        }\r\n      </div>\r\n      <div className=\"item--right\">\r\n        <span className=\"rating\">{user.rating}</span>\r\n        <div>\r\n          <span className=\"studentName\">{user.name}</span>\r\n          <span className=\"studentId\">{user.studentid}</span>\r\n          <span className=\"department\">{user.department}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n\r\n  function onChangeAction(e) {\r\n    setTypeContent(e.target.value)\r\n  }\r\n\r\n  function onClickAction(e) {\r\n    const target = e.target.id;\r\n    setCurrentType(target)\r\n  }\r\n\r\n  const rankingContentFilter = (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <div className=\"dropdown--selected\">\r\n          <span className=\"selected\">{currentType}</span>\r\n          <FontAwesomeIcon icon={faCaretDown}/>\r\n        </div>\r\n        <ul className=\"dropdown--list\">\r\n          <li id=\"전체\" className=\"dropdown--list__item\" onClick={onClickAction}>전체</li>\r\n          <li id=\"학번\" className=\"dropdown--list__item\" onClick={onClickAction}>학번</li>\r\n        </ul>\r\n      </div>\r\n      <input type=\"text\" className=\"rankingContent-input\" placeholder=\"text me...\" onChange={onChangeAction} />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {contentMode === \"전체랭킹\" && rankingContentFilter}\r\n      <div className=\"rankingContainer\" onScroll={onScrollAction}>\r\n        {userRankingList}\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default RankingContent;","import React from 'react';\r\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst RecentGame = ({ allGame }) => {\r\n\r\n    const recentGames =  allGame.slice(0, 5).map((el, index) => (\r\n        <div className=\"game\" key={index}>\r\n            <div className=\"top\">{el.date.slice(0, 4)}년 {el.date.slice(4, 6)}월 {el.date.slice(6)}일</div>\r\n            <div className=\"bot\">\r\n                {el.winners.length === 2 ?\r\n                    <>\r\n                    <div className=\"winner\">\r\n                        <span>Winner! ^^</span>\r\n                        <div className=\"winnerInfo\">\r\n                            <div className=\"winnerNames\">\r\n                                <span className=\"winner__name\">{el.winners[0]}</span>\r\n                                <span className=\"winner__name\">{el.winners[1]}</span>\r\n                            </div>\r\n                            <div className=\"winnerRatings\">\r\n                                <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                                <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"loser\">\r\n                        <span>loser! ㅠㅠ</span>\r\n                        <div className=\"loserInfo\">\r\n                            <div className=\"loserNames\">\r\n                                <span className=\"loser__name\">{el.losers[0]}</span>\r\n                                <span className=\"loser__name\">{el.losers[1]}</span>\r\n                            </div>\r\n                            <div className=\"loserRatings\">\r\n                                <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                                <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </>\r\n                :\r\n                    <>\r\n                    <div className=\"winner\">\r\n                        <span>Winner! ^^</span>\r\n                        <div className=\"winnerInfo\">\r\n                            <div className=\"winnerNames\">\r\n                                <span className=\"winner__name\">{el.winners[0]}</span>\r\n                            </div>\r\n                            <div className=\"winnerRatings\">\r\n                                <span className=\"winner__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--win\" icon={faCaretUp} /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"loser\">\r\n                        <span>loser! ㅠㅠ</span>\r\n                        <div className=\"loserInfo\">\r\n                            <div className=\"loserNames\">\r\n                                <span className=\"loser__name\">{el.losers[0]}</span>\r\n                            </div>\r\n                            <div className=\"loserRatings\">\r\n                                <span className=\"loser__rating>\">{el.ratingChange}<FontAwesomeIcon className=\"icon--lose\" icon={faCaretDown} /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n        ))\r\n\r\n    return (\r\n        <div className=\"games\">\r\n            {recentGames}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecentGame","import React from 'react';\r\nimport { ResponsiveLine  } from '@nivo/line'\r\n\r\nconst UserInfo = ({allUsers, allGame, contentMode}) => {\r\n  \r\n  const allUsersByTime = [...allUsers];\r\n  allUsersByTime.sort(function(a,b){\r\n    return a.time > b.time ? -1 : a.time < b.time ? 1: 0;\r\n  })\r\n\r\n  const data = [\r\n    {\r\n      \"id\": \"japan\",\r\n      \"color\": \"hsl(314, 70%, 50%)\",\r\n      \"data\": [\r\n        {\r\n          \"x\": \"plane\",\r\n          \"y\": 99\r\n        },\r\n        {\r\n          \"x\": \"helicopter\",\r\n          \"y\": 142\r\n        },\r\n        {\r\n          \"x\": \"boat\",\r\n          \"y\": 88\r\n        },\r\n        {\r\n          \"x\": \"train\",\r\n          \"y\": 100\r\n        },\r\n        {\r\n          \"x\": \"subway\",\r\n          \"y\": 283\r\n        },\r\n        {\r\n          \"x\": \"bus\",\r\n          \"y\": 30\r\n        },\r\n        {\r\n          \"x\": \"car\",\r\n          \"y\": 264\r\n        },\r\n        {\r\n          \"x\": \"moto\",\r\n          \"y\": 290\r\n        },\r\n        {\r\n          \"x\": \"bicycle\",\r\n          \"y\": 238\r\n        },\r\n        {\r\n          \"x\": \"horse\",\r\n          \"y\": 166\r\n        },\r\n        {\r\n          \"x\": \"skateboard\",\r\n          \"y\": 264\r\n        },\r\n        {\r\n          \"x\": \"others\",\r\n          \"y\": 287\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"id\": \"france\",\r\n      \"color\": \"hsl(99, 70%, 50%)\",\r\n      \"data\": [\r\n        {\r\n          \"x\": \"plane\",\r\n          \"y\": 242\r\n        },\r\n        {\r\n          \"x\": \"helicopter\",\r\n          \"y\": 49\r\n        },\r\n        {\r\n          \"x\": \"boat\",\r\n          \"y\": 182\r\n        },\r\n        {\r\n          \"x\": \"train\",\r\n          \"y\": 0\r\n        },\r\n        {\r\n          \"x\": \"subway\",\r\n          \"y\": 285\r\n        },\r\n        {\r\n          \"x\": \"bus\",\r\n          \"y\": 218\r\n        },\r\n        {\r\n          \"x\": \"car\",\r\n          \"y\": 15\r\n        },\r\n        {\r\n          \"x\": \"moto\",\r\n          \"y\": 2\r\n        },\r\n        {\r\n          \"x\": \"bicycle\",\r\n          \"y\": 235\r\n        },\r\n        {\r\n          \"x\": \"horse\",\r\n          \"y\": 72\r\n        },\r\n        {\r\n          \"x\": \"skateboard\",\r\n          \"y\": 49\r\n        },\r\n        {\r\n          \"x\": \"others\",\r\n          \"y\": 184\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\n    const userInfo = allUsersByTime.map((user,index) => (\r\n        <div className=\"userInfo\" key={index}>\r\n          <div className=\"userProfile\">\r\n            <img className=\"userImage\" src={user.attachmentUrl}/>\r\n          </div>\r\n          <div className=\"userInfoRightSide\">\r\n            <div className=\"userInfoUpSide\">\r\n              <div>\r\n                <span className=\"studentName\">{user.name}</span>\r\n                <span> . . . </span>\r\n                <span className=\"userStatus\">{user.status}</span>\r\n              </div>\r\n              <div className=\"win_lose\">\r\n                <div className=\"department\">{user.game_win}승</div>\r\n                <div className=\"department\">{user.game_lose}패</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"userInfoBottomSide\">\r\n              <span className=\"rating\">레이팅: {user.rating}</span>\r\n              <span className=\"studentId\">{user.studentId}</span>\r\n              <span className=\"department\">{user.department}</span>\r\n              {/* <span className=\"department\">승률: {Math.round(((user.game_win)/(user.game_all))*100)}%</span> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n    ))\r\n    return (\r\n        <div className=\"usersInformation\">\r\n          <div className=\"chartSample\">\r\n            <ResponsiveLine\r\n              data={data}\r\n              margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n              xScale={{ type: 'point' }}\r\n              yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n              axisTop={null}\r\n              axisRight={null}\r\n              axisBottom={{\r\n                  orient: 'bottom',\r\n                  tickSize: 5,\r\n                  tickPadding: 5,\r\n                  tickRotation: 0,\r\n                  legend: 'transportation',\r\n                  legendOffset: 36,\r\n                  legendPosition: 'middle'\r\n              }}\r\n              axisLeft={{\r\n                  orient: 'left',\r\n                  tickSize: 5,\r\n                  tickPadding: 5,\r\n                  tickRotation: 0,\r\n                  legend: 'count',\r\n                  legendOffset: -40,\r\n                  legendPosition: 'middle'\r\n              }}\r\n              enableGridX={false}\r\n              lineWidth={3}\r\n              pointSize={10}\r\n              pointColor={{ theme: 'background' }}\r\n              pointBorderWidth={2}\r\n              pointBorderColor={{ from: 'serieColor' }}\r\n              pointLabelYOffset={-16}\r\n              isInteractive={false}\r\n              enableCrosshair={false}\r\n              legends={[\r\n                  {\r\n                      anchor: 'bottom-right',\r\n                      direction: 'column',\r\n                      justify: false,\r\n                      translateX: 107,\r\n                      translateY: -15,\r\n                      itemsSpacing: 2,\r\n                      itemDirection: 'left-to-right',\r\n                      itemWidth: 88,\r\n                      itemHeight: 20,\r\n                      itemOpacity: 0.75,\r\n                      symbolSize: 12,\r\n                      symbolShape: 'circle',\r\n                      symbolBorderColor: 'rgba(0, 0, 0, 0.5)',\r\n                      effects: [\r\n                          {\r\n                              on: 'hover',\r\n                              style: {\r\n                                  itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                  itemOpacity: 1\r\n                              }\r\n                          }\r\n                      ]\r\n                  }\r\n              ]}\r\n            />\r\n          </div>\r\n          <div className=\"userList\">\r\n            {userInfo}\r\n          </div>\r\n          \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UserInfo;","import React, { useEffect, useState } from 'react';\r\nimport Post from '../component/client/Post';\r\nimport RankingContent from '../component/client/RankingContent';\r\nimport RecentGame from '../component/client/RecentGame';\r\nimport UserInfo from '../component/client/UserInfo';\r\nimport '../css/client.css';\r\nimport '../css/client_mugil.css';\r\n\r\nconst ClientMain = ({userObj, allUsers, allGame}) => {\r\n  const [contentMode, setContentMode] = useState(\"재학생랭킹\");\r\n\r\n  const listOnClicked = e => {\r\n    e.preventDefault();\r\n    setContentMode(e.target.id)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"client-container\">\r\n        <div className=\"nav\">\r\n              <ul>\r\n                <li id=\"재학생랭킹\" onClick={listOnClicked}>재학생 랭킹</li>\r\n                <li id=\"전체랭킹\" onClick={listOnClicked}>전체 랭킹</li>\r\n                <li id=\"선수상세정보\" onClick={listOnClicked}>선수 상세정보</li>\r\n                <li id=\"게시글\" onClick={listOnClicked}>게시글</li>\r\n              </ul>\r\n              {/* 로그인 기능 추가 시 */}\r\n              {/* {userObj &&\r\n                  <div className=\"signedUser\">\r\n                  <img className=\"signedUser--img\" src={userObj.photoURL} alt=\"\"></img>\r\n                  <div className=\"signedUser--txt\">\r\n                      <p className=\"signedUser__name\">{userObj.displayName}</p>\r\n                      <p className=\"signedUser__email\">{userObj.email}</p>\r\n                  </div>\r\n                  </div>\r\n              } */}\r\n              <footer>\r\n                  <p className=\"footer--top\">&copy; 2021, Built by</p>\r\n                  <p className=\"footer--bot\">gilmujjang & Hyeon-Gwang</p>\r\n              </footer>\r\n          </div>\r\n        <div className=\"ClientMain\">\r\n          {[\"재학생랭킹\",\"전체랭킹\"].includes(contentMode) && <RankingContent allGame={allGame} allUsers={allUsers} contentMode={contentMode} setContentMode={setContentMode}/>}\r\n          {contentMode===\"선수상세정보\" && <UserInfo allUsers={allUsers}/>}\r\n          {contentMode===\"게시글\" && <Post userObj={userObj}/>}\r\n        </div>\r\n        {\r\n        !['선수상세정보', '게시글'].includes(contentMode) &&\r\n        <div className=\"aside\">\r\n          <div className=\"aside1\">\r\n            <RecentGame allGame={allGame}/>\r\n          </div>\r\n          <div className=\"aside2\">\r\n            <h2>aside2</h2>\r\n          </div>\r\n        </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientMain;\r\n","import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from '../router/Auth';\r\nimport AdminMain from '../router/AdminMain';\r\nimport ClientMain from '../router/ClientMain';\r\nimport {React, useEffect, useState } from 'react';\r\nimport { dbService } from '../fbase'\r\n\r\n\r\n\r\nconst AppRouter = ({ userObj }) => {\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [allGame, setAllGame] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"user\").orderBy(\"rating\",\"desc\").get().then(snapshot => {\r\n      snapshot.docs.map(doc => {\r\n        const userObject = {\r\n          name:doc.data().name,\r\n          rating:doc.data().rating,\r\n          game_all:doc.data().game_all,\r\n          game_win:doc.data().game_win,\r\n          game_lose:doc.data().game_lose,\r\n          studentid:doc.data().studentid,\r\n          department:doc.data().department,\r\n          status: doc.data().status,\r\n          time:doc.data().time,\r\n          attachmentUrl:doc.data().attachmentUrl\r\n        }\r\n        setAllUsers(allUsers => [...allUsers, userObject]);\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"game\").orderBy(\"write_time\",\"desc\").limit(10).get().then(snapshot => {\r\n      snapshot.docs.map(doc => {\r\n        const gameObject = {\r\n          winners:doc.data().winners,\r\n          losers:doc.data().losers,\r\n          ratingChange:doc.data().ratingChange,\r\n          percentage:doc.data().percentage,\r\n          date:doc.data().date,\r\n          time:doc.data().write_time,\r\n          id:doc.data().date+'-'+doc.data().write_time\r\n        }\r\n        setAllGame(allGame => [...allGame, gameObject]);\r\n      })\r\n    })\r\n  }, [])\r\n  return(\r\n    <Router>\r\n      <Route exact path = \"/\">\r\n        <ClientMain allUsers={allUsers} allGame={allGame} userObj={userObj}/>\r\n      </Route>\r\n      <Switch>\r\n        {userObj.displayName ? (\r\n        <Route path=\"/admin\">\r\n          <AdminMain userObj={userObj}  allUsers={allUsers} allGame={allGame}/>\r\n        </Route>\r\n         ) : (\r\n          <Route exact path = \"/admin\">\r\n            <Auth/>\r\n          </Route>\r\n         )}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default AppRouter;","import './style.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport AppRouter from \"./component/Router\";\r\nimport { authService } from \"./fbase\";\r\n\r\nfunction App() {\r\n  const user = authService.currentUser;\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState({displayName: null});\r\n  useEffect( () => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        authService.signInAnonymously()\r\n        .catch((error) => {\r\n          console.log(error.code)\r\n          console.log(error.message)\r\n        })\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, [])\r\n\r\n\r\n  const refreshUser = () => {\r\n    setUserObj(authService.currentUser);\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter \r\n          refreshUser = {refreshUser}\r\n          isLoggedIn={Boolean(userObj)} \r\n          userObj={userObj}\r\n        />\r\n        ):(\r\n          \"Initailizing...\")}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}